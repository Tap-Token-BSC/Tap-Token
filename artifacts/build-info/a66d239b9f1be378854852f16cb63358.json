{
	"id": "a66d239b9f1be378854852f16cb63358",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\nimport \"./Context.sol\";\r\nimport \"./ERC20.sol\";\r\n\r\n/**\r\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\r\n * tokens and those that they have an allowance for, in a way that can be\r\n * recognized off-chain (via event analysis).\r\n */\r\nabstract contract ERC20Burnable is Context, ERC20 {\r\n    /**\r\n     * @dev Destroys `amount` tokens from the caller.\r\n     *\r\n     * See {ERC20-_burn}.\r\n     */\r\n    function burn(uint256 amount) public virtual {\r\n        _burn(_msgSender(), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\r\n     * allowance.\r\n     *\r\n     * See {ERC20-_burn} and {ERC20-allowance}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have allowance for ``accounts``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function burnFrom(address account, uint256 amount) public virtual {\r\n        _spendAllowance(account, _msgSender(), amount);\r\n        _burn(account, amount);\r\n    }\r\n}"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\nimport \"./Context.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, SafeMath.add(allowance(owner, spender), addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, SafeMath.sub(currentAllowance, subtractedValue));\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address from, address to, uint256 amount) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = SafeMath.sub(fromBalance, amount);\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] = SafeMath.add(_balances[to], amount);\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = SafeMath.add(_totalSupply, amount);\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] = SafeMath.add(_balances[account], amount);\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = SafeMath.sub(accountBalance, amount);\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply = SafeMath.sub(_totalSupply, amount);\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, SafeMath.sub(currentAllowance, amount));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\r\n}"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.27;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xc5362693190540c7f642ec79ab1f3ec643706aadf7f306fadf8c334b137cbde3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c383a771310756218fe5e3feb6d4b49bee8d99342c15e04e376db34be0c9faf\",\"dweb:/ipfs/QmWx7coqVjLhfvBwdRsfoxk6nQxTnWzqAYJzvx8kogbWsm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1500:13319  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1964:2080  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":2039:2044  name_ */\n  dup2\n    /* \"ERC20.sol\":2031:2036  _name */\n  0x03\n    /* \"ERC20.sol\":2031:2044  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":1964:2080  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1500:13319  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_20:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_21:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_63\n    /* \"#utility.yul\":1885:1934   */\n  tag_64\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1869:1935   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_66\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2010:2122   */\ntag_65:\n    /* \"#utility.yul\":2131:2183   */\n  tag_67\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_20\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_22:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_70\n  tag_13\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2292:2414   */\ntag_69:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_71\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_74\n  tag_11\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2694:2813   */\ntag_73:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_76\n  tag_12\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2889:3006   */\ntag_75:\n    /* \"#utility.yul\":3030:3104   */\n  tag_77\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3191:3308   */\ntag_78:\n    /* \"#utility.yul\":3332:3406   */\n  tag_80\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_23:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_24:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_25:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_84:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_86\n  tag_24\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3950:4034   */\ntag_85:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_26:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_27:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_28:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_29:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_91\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4665:4704   */\n  tag_92\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_28\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_30:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_31:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_32:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_96\n    /* \"#utility.yul\":5054:5088   */\n  tag_97\n    /* \"#utility.yul\":5063:5087   */\n  tag_98\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5054:5088   */\n  tag_31\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5036:5089   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_33:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_34:\n    /* \"#utility.yul\":5292:5331   */\n  tag_101\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5353:5444   */\n  tag_102\n    /* \"#utility.yul\":5402:5443   */\n  tag_103\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_29\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_35:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_36:\n    /* \"#utility.yul\":5613:5645   */\n  tag_106\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5654:5719   */\n  tag_107\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_37:\n    /* \"#utility.yul\":5791:5911   */\ntag_109:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_112\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_38:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_115\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_26\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6142:6171   */\n  tag_116\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_27\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_117:\n    /* \"#utility.yul\":6369:6449   */\n  tag_118\n    /* \"#utility.yul\":6425:6447   */\n  tag_119\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_37\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_114:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_39:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_40:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_122\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_41:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_124\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_7:\n    /* \"#utility.yul\":7186:7223   */\n  tag_126\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_23\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_128\n  tag_16\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7274:7330   */\ntag_127:\n    /* \"#utility.yul\":7354:7392   */\n  tag_129\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_25\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7439:7506   */\n  tag_130\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_38\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_133:\n    /* \"#utility.yul\":8380:8447   */\n  tag_134\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_41\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_131)\n    /* \"#utility.yul\":7601:8219   */\ntag_132:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_135\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_26\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_136:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_140\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_40\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_139:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_131:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":1500:13319  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1500:13319  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"ERC20.sol\":2150:2250  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4510:4711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3279:3387  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5291:5552  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3121:3214  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5961:6212  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3450:3577  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2369:2473  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":6715:7164  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3783:3976  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4039:4190  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2150:2250  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2204:2217  string memory */\n      0x60\n        /* \"ERC20.sol\":2237:2242  _name */\n      0x03\n        /* \"ERC20.sol\":2230:2242  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2150:2250  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4510:4711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"ERC20.sol\":4593:4597  bool */\n      0x00\n        /* \"ERC20.sol\":4610:4623  address owner */\n      0x00\n        /* \"ERC20.sol\":4626:4638  _msgSender() */\n      tag_71\n        /* \"ERC20.sol\":4626:4636  _msgSender */\n      tag_72\n        /* \"ERC20.sol\":4626:4638  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"ERC20.sol\":4610:4638  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":4649:4681  _approve(owner, spender, amount) */\n      tag_73\n        /* \"ERC20.sol\":4658:4663  owner */\n      dup2\n        /* \"ERC20.sol\":4665:4672  spender */\n      dup6\n        /* \"ERC20.sol\":4674:4680  amount */\n      dup6\n        /* \"ERC20.sol\":4649:4657  _approve */\n      tag_74\n        /* \"ERC20.sol\":4649:4681  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":4699:4703  true */\n      0x01\n        /* \"ERC20.sol\":4692:4703  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4510:4711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3279:3387  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"ERC20.sol\":3340:3347  uint256 */\n      0x00\n        /* \"ERC20.sol\":3367:3379  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3360:3379  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":3279:3387  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5291:5552  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"ERC20.sol\":5388:5392  bool */\n      0x00\n        /* \"ERC20.sol\":5405:5420  address spender */\n      0x00\n        /* \"ERC20.sol\":5423:5435  _msgSender() */\n      tag_77\n        /* \"ERC20.sol\":5423:5433  _msgSender */\n      tag_72\n        /* \"ERC20.sol\":5423:5435  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"ERC20.sol\":5405:5435  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":5446:5484  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"ERC20.sol\":5462:5466  from */\n      dup6\n        /* \"ERC20.sol\":5468:5475  spender */\n      dup3\n        /* \"ERC20.sol\":5477:5483  amount */\n      dup6\n        /* \"ERC20.sol\":5446:5461  _spendAllowance */\n      tag_79\n        /* \"ERC20.sol\":5446:5484  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"ERC20.sol\":5495:5522  _transfer(from, to, amount) */\n      tag_80\n        /* \"ERC20.sol\":5505:5509  from */\n      dup6\n        /* \"ERC20.sol\":5511:5513  to */\n      dup6\n        /* \"ERC20.sol\":5515:5521  amount */\n      dup6\n        /* \"ERC20.sol\":5495:5504  _transfer */\n      tag_81\n        /* \"ERC20.sol\":5495:5522  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"ERC20.sol\":5540:5544  true */\n      0x01\n        /* \"ERC20.sol\":5533:5544  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":5291:5552  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3121:3214  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"ERC20.sol\":3179:3184  uint8 */\n      0x00\n        /* \"ERC20.sol\":3204:3206  18 */\n      0x12\n        /* \"ERC20.sol\":3197:3206  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":3121:3214  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5961:6212  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"ERC20.sol\":6049:6053  bool */\n      0x00\n        /* \"ERC20.sol\":6066:6079  address owner */\n      0x00\n        /* \"ERC20.sol\":6082:6094  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":6082:6092  _msgSender */\n      tag_72\n        /* \"ERC20.sol\":6082:6094  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":6066:6094  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":6105:6182  _approve(owner, spender, SafeMath.add(allowance(owner, spender), addedValue)) */\n      tag_85\n        /* \"ERC20.sol\":6114:6119  owner */\n      dup2\n        /* \"ERC20.sol\":6121:6128  spender */\n      dup6\n        /* \"ERC20.sol\":6130:6181  SafeMath.add(allowance(owner, spender), addedValue) */\n      tag_86\n        /* \"ERC20.sol\":6143:6168  allowance(owner, spender) */\n      tag_87\n        /* \"ERC20.sol\":6153:6158  owner */\n      dup6\n        /* \"ERC20.sol\":6160:6167  spender */\n      dup10\n        /* \"ERC20.sol\":6143:6152  allowance */\n      tag_61\n        /* \"ERC20.sol\":6143:6168  allowance(owner, spender) */\n      jump\t// in\n    tag_87:\n        /* \"ERC20.sol\":6170:6180  addedValue */\n      dup8\n        /* \"ERC20.sol\":6130:6142  SafeMath.add */\n      tag_88\n        /* \"ERC20.sol\":6130:6181  SafeMath.add(allowance(owner, spender), addedValue) */\n      jump\t// in\n    tag_86:\n        /* \"ERC20.sol\":6105:6113  _approve */\n      tag_74\n        /* \"ERC20.sol\":6105:6182  _approve(owner, spender, SafeMath.add(allowance(owner, spender), addedValue)) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20.sol\":6200:6204  true */\n      0x01\n        /* \"ERC20.sol\":6193:6204  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":5961:6212  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3450:3577  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"ERC20.sol\":3524:3531  uint256 */\n      0x00\n        /* \"ERC20.sol\":3551:3560  _balances */\n      0x00\n        /* \"ERC20.sol\":3551:3569  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3561:3568  account */\n      dup4\n        /* \"ERC20.sol\":3551:3569  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3544:3569  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3450:3577  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2369:2473  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"ERC20.sol\":2458:2465  _symbol */\n      0x04\n        /* \"ERC20.sol\":2451:2465  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2369:2473  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":6715:7164  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"ERC20.sol\":6808:6812  bool */\n      0x00\n        /* \"ERC20.sol\":6825:6838  address owner */\n      0x00\n        /* \"ERC20.sol\":6841:6853  _msgSender() */\n      tag_97\n        /* \"ERC20.sol\":6841:6851  _msgSender */\n      tag_72\n        /* \"ERC20.sol\":6841:6853  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"ERC20.sol\":6825:6853  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":6864:6888  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":6891:6916  allowance(owner, spender) */\n      tag_98\n        /* \"ERC20.sol\":6901:6906  owner */\n      dup3\n        /* \"ERC20.sol\":6908:6915  spender */\n      dup7\n        /* \"ERC20.sol\":6891:6900  allowance */\n      tag_61\n        /* \"ERC20.sol\":6891:6916  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":6864:6916  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":6955:6970  subtractedValue */\n      dup4\n        /* \"ERC20.sol\":6935:6951  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6935:6970  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":6927:7012  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"ERC20.sol\":7048:7121  _approve(owner, spender, SafeMath.sub(currentAllowance, subtractedValue)) */\n      tag_102\n        /* \"ERC20.sol\":7057:7062  owner */\n      dup3\n        /* \"ERC20.sol\":7064:7071  spender */\n      dup7\n        /* \"ERC20.sol\":7073:7120  SafeMath.sub(currentAllowance, subtractedValue) */\n      tag_103\n        /* \"ERC20.sol\":7086:7102  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":7104:7119  subtractedValue */\n      dup9\n        /* \"ERC20.sol\":7073:7085  SafeMath.sub */\n      tag_104\n        /* \"ERC20.sol\":7073:7120  SafeMath.sub(currentAllowance, subtractedValue) */\n      jump\t// in\n    tag_103:\n        /* \"ERC20.sol\":7048:7056  _approve */\n      tag_74\n        /* \"ERC20.sol\":7048:7121  _approve(owner, spender, SafeMath.sub(currentAllowance, subtractedValue)) */\n      jump\t// in\n    tag_102:\n        /* \"ERC20.sol\":7152:7156  true */\n      0x01\n        /* \"ERC20.sol\":7145:7156  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"ERC20.sol\":6715:7164  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3783:3976  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"ERC20.sol\":3862:3866  bool */\n      0x00\n        /* \"ERC20.sol\":3879:3892  address owner */\n      0x00\n        /* \"ERC20.sol\":3895:3907  _msgSender() */\n      tag_106\n        /* \"ERC20.sol\":3895:3905  _msgSender */\n      tag_72\n        /* \"ERC20.sol\":3895:3907  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"ERC20.sol\":3879:3907  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20.sol\":3918:3946  _transfer(owner, to, amount) */\n      tag_107\n        /* \"ERC20.sol\":3928:3933  owner */\n      dup2\n        /* \"ERC20.sol\":3935:3937  to */\n      dup6\n        /* \"ERC20.sol\":3939:3945  amount */\n      dup6\n        /* \"ERC20.sol\":3918:3927  _transfer */\n      tag_81\n        /* \"ERC20.sol\":3918:3946  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_107:\n        /* \"ERC20.sol\":3964:3968  true */\n      0x01\n        /* \"ERC20.sol\":3957:3968  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":3783:3976  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4039:4190  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"ERC20.sol\":4128:4135  uint256 */\n      0x00\n        /* \"ERC20.sol\":4155:4166  _allowances */\n      0x01\n        /* \"ERC20.sol\":4155:4173  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":4167:4172  owner */\n      dup5\n        /* \"ERC20.sol\":4155:4173  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":4155:4182  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":4174:4181  spender */\n      dup4\n        /* \"ERC20.sol\":4155:4182  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":4148:4182  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":4039:4190  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"Context.sol\":654:661  address */\n      0x00\n        /* \"Context.sol\":681:691  msg.sender */\n      caller\n        /* \"Context.sol\":674:691  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":10862:11208  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n        /* \"ERC20.sol\":10981:10982  0 */\n      0x00\n        /* \"ERC20.sol\":10964:10983  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10964:10969  owner */\n      dup4\n        /* \"ERC20.sol\":10964:10983  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":10956:11024  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"ERC20.sol\":11062:11063  0 */\n      0x00\n        /* \"ERC20.sol\":11043:11064  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":11043:11050  spender */\n      dup3\n        /* \"ERC20.sol\":11043:11064  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":11035:11103  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"ERC20.sol\":11146:11152  amount */\n      dup1\n        /* \"ERC20.sol\":11116:11127  _allowances */\n      0x01\n        /* \"ERC20.sol\":11116:11134  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":11128:11133  owner */\n      dup6\n        /* \"ERC20.sol\":11116:11134  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":11116:11143  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":11135:11142  spender */\n      dup5\n        /* \"ERC20.sol\":11116:11143  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":11116:11152  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":11184:11191  spender */\n      dup2\n        /* \"ERC20.sol\":11168:11200  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":11177:11182  owner */\n      dup4\n        /* \"ERC20.sol\":11168:11200  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":11193:11199  amount */\n      dup4\n        /* \"ERC20.sol\":11168:11200  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10862:11208  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11499:11931  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"ERC20.sol\":11600:11624  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":11627:11652  allowance(owner, spender) */\n      tag_119\n        /* \"ERC20.sol\":11637:11642  owner */\n      dup5\n        /* \"ERC20.sol\":11644:11651  spender */\n      dup5\n        /* \"ERC20.sol\":11627:11636  allowance */\n      tag_61\n        /* \"ERC20.sol\":11627:11652  allowance(owner, spender) */\n      jump\t// in\n    tag_119:\n        /* \"ERC20.sol\":11600:11652  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":11687:11704  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC20.sol\":11667:11683  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":11667:11704  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20.sol\":11663:11924  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"ERC20.sol\":11749:11755  amount */\n      dup2\n        /* \"ERC20.sol\":11729:11745  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":11729:11755  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":11721:11789  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"ERC20.sol\":11833:11897  _approve(owner, spender, SafeMath.sub(currentAllowance, amount)) */\n      tag_124\n        /* \"ERC20.sol\":11842:11847  owner */\n      dup5\n        /* \"ERC20.sol\":11849:11856  spender */\n      dup5\n        /* \"ERC20.sol\":11858:11896  SafeMath.sub(currentAllowance, amount) */\n      tag_125\n        /* \"ERC20.sol\":11871:11887  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":11889:11895  amount */\n      dup7\n        /* \"ERC20.sol\":11858:11870  SafeMath.sub */\n      tag_104\n        /* \"ERC20.sol\":11858:11896  SafeMath.sub(currentAllowance, amount) */\n      jump\t// in\n    tag_125:\n        /* \"ERC20.sol\":11833:11841  _approve */\n      tag_74\n        /* \"ERC20.sol\":11833:11897  _approve(owner, spender, SafeMath.sub(currentAllowance, amount)) */\n      jump\t// in\n    tag_124:\n        /* \"ERC20.sol\":11663:11924  if (currentAllowance != type(uint256).max) {... */\n    tag_120:\n        /* \"ERC20.sol\":11589:11931  {... */\n      pop\n        /* \"ERC20.sol\":11499:11931  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7634:8481  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n        /* \"ERC20.sol\":7747:7748  0 */\n      0x00\n        /* \"ERC20.sol\":7731:7749  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7731:7735  from */\n      dup4\n        /* \"ERC20.sol\":7731:7749  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":7723:7791  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"ERC20.sol\":7824:7825  0 */\n      0x00\n        /* \"ERC20.sol\":7810:7826  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7810:7812  to */\n      dup3\n        /* \"ERC20.sol\":7810:7826  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":7802:7866  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"ERC20.sol\":7879:7917  _beforeTokenTransfer(from, to, amount) */\n      tag_133\n        /* \"ERC20.sol\":7900:7904  from */\n      dup4\n        /* \"ERC20.sol\":7906:7908  to */\n      dup4\n        /* \"ERC20.sol\":7910:7916  amount */\n      dup4\n        /* \"ERC20.sol\":7879:7899  _beforeTokenTransfer */\n      tag_134\n        /* \"ERC20.sol\":7879:7917  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_133:\n        /* \"ERC20.sol\":7930:7949  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":7952:7961  _balances */\n      0x00\n        /* \"ERC20.sol\":7952:7967  _balances[from] */\n      0x00\n        /* \"ERC20.sol\":7962:7966  from */\n      dup6\n        /* \"ERC20.sol\":7952:7967  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":7930:7967  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC20.sol\":8001:8007  amount */\n      dup2\n        /* \"ERC20.sol\":7986:7997  fromBalance */\n      dup2\n        /* \"ERC20.sol\":7986:8007  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":7978:8050  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"ERC20.sol\":8104:8137  SafeMath.sub(fromBalance, amount) */\n      tag_138\n        /* \"ERC20.sol\":8117:8128  fromBalance */\n      dup2\n        /* \"ERC20.sol\":8130:8136  amount */\n      dup4\n        /* \"ERC20.sol\":8104:8116  SafeMath.sub */\n      tag_104\n        /* \"ERC20.sol\":8104:8137  SafeMath.sub(fromBalance, amount) */\n      jump\t// in\n    tag_138:\n        /* \"ERC20.sol\":8086:8095  _balances */\n      0x00\n        /* \"ERC20.sol\":8086:8101  _balances[from] */\n      0x00\n        /* \"ERC20.sol\":8096:8100  from */\n      dup7\n        /* \"ERC20.sol\":8086:8101  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":8086:8137  _balances[from] = SafeMath.sub(fromBalance, amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8333:8368  SafeMath.add(_balances[to], amount) */\n      tag_139\n        /* \"ERC20.sol\":8346:8355  _balances */\n      0x00\n        /* \"ERC20.sol\":8346:8359  _balances[to] */\n      0x00\n        /* \"ERC20.sol\":8356:8358  to */\n      dup6\n        /* \"ERC20.sol\":8346:8359  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":8361:8367  amount */\n      dup4\n        /* \"ERC20.sol\":8333:8345  SafeMath.add */\n      tag_88\n        /* \"ERC20.sol\":8333:8368  SafeMath.add(_balances[to], amount) */\n      jump\t// in\n    tag_139:\n        /* \"ERC20.sol\":8317:8326  _balances */\n      0x00\n        /* \"ERC20.sol\":8317:8330  _balances[to] */\n      0x00\n        /* \"ERC20.sol\":8327:8329  to */\n      dup6\n        /* \"ERC20.sol\":8317:8330  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":8317:8368  _balances[to] = SafeMath.add(_balances[to], amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8412:8414  to */\n      dup3\n        /* \"ERC20.sol\":8397:8423  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":8406:8410  from */\n      dup5\n        /* \"ERC20.sol\":8397:8423  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":8416:8422  amount */\n      dup5\n        /* \"ERC20.sol\":8397:8423  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":8436:8473  _afterTokenTransfer(from, to, amount) */\n      tag_141\n        /* \"ERC20.sol\":8456:8460  from */\n      dup5\n        /* \"ERC20.sol\":8462:8464  to */\n      dup5\n        /* \"ERC20.sol\":8466:8472  amount */\n      dup5\n        /* \"ERC20.sol\":8436:8455  _afterTokenTransfer */\n      tag_142\n        /* \"ERC20.sol\":8436:8473  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_141:\n        /* \"ERC20.sol\":7712:8481  {... */\n      pop\n        /* \"ERC20.sol\":7634:8481  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":2765:2944  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"SafeMath.sol\":2823:2830  uint256 */\n      0x00\n        /* \"SafeMath.sol\":2843:2852  uint256 c */\n      0x00\n        /* \"SafeMath.sol\":2859:2860  b */\n      dup3\n        /* \"SafeMath.sol\":2855:2856  a */\n      dup5\n        /* \"SafeMath.sol\":2855:2860  a + b */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"SafeMath.sol\":2843:2860  uint256 c = a + b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":2884:2885  a */\n      dup4\n        /* \"SafeMath.sol\":2879:2880  c */\n      dup2\n        /* \"SafeMath.sol\":2879:2885  c >= a */\n      lt\n      iszero\n        /* \"SafeMath.sol\":2871:2917  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"SafeMath.sol\":2935:2936  c */\n      dup1\n        /* \"SafeMath.sol\":2928:2936  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":2765:2944  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":3227:3385  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"SafeMath.sol\":3285:3292  uint256 */\n      0x00\n        /* \"SafeMath.sol\":3318:3319  a */\n      dup3\n        /* \"SafeMath.sol\":3313:3314  b */\n      dup3\n        /* \"SafeMath.sol\":3313:3319  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":3305:3354  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"SafeMath.sol\":3376:3377  b */\n      dup2\n        /* \"SafeMath.sol\":3372:3373  a */\n      dup4\n        /* \"SafeMath.sol\":3372:3377  a - b */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"SafeMath.sol\":3365:3377  return a - b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":3227:3385  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":12531:12622  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_134:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":13226:13316  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_142:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_157:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_158:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_159:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_160:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_161:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_203\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_157\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":711:782   */\n      tag_204\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_158\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_205\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_159\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":881:910   */\n      tag_206\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_160\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_18:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_208\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_161\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_163:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_165:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_166:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_214\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_165\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_167:\n        /* \"#utility.yul\":1876:1900   */\n      tag_216\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_166\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_217:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_168:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_219\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_167\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_169:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_170:\n        /* \"#utility.yul\":2232:2256   */\n      tag_222\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_169\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_223:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_171:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_225\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_170\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_21:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_228\n      tag_163\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2525:2644   */\n    tag_227:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_229\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_168\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_230\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_171\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_172:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_173:\n        /* \"#utility.yul\":3089:3110   */\n      tag_233\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_172\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_24:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_235\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_173\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_174:\n        /* \"#utility.yul\":3426:3450   */\n      tag_237\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_169\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_28:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_239\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_174\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_31:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_242\n      tag_163\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3801:3920   */\n    tag_241:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_243\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_168\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_244\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_168\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_245\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_171\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_175:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_176:\n        /* \"#utility.yul\":4491:4513   */\n      tag_248\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_175\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_37:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_250\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_176\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_44:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_253\n      tag_163\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4822:4941   */\n    tag_252:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_254\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_168\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_60:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_257\n      tag_163\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5174:5293   */\n    tag_256:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_258\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_168\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_259\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_168\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_177:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_65:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_262:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_264\n      tag_177\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5977:6061   */\n    tag_263:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6297   */\n    tag_178:\n        /* \"#utility.yul\":6213:6247   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6209:6210   */\n      0x00\n        /* \"#utility.yul\":6201:6207   */\n      dup3\n        /* \"#utility.yul\":6197:6211   */\n      add\n        /* \"#utility.yul\":6190:6248   */\n      mstore\n        /* \"#utility.yul\":6282:6289   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6277:6279   */\n      0x20\n        /* \"#utility.yul\":6269:6275   */\n      dup3\n        /* \"#utility.yul\":6265:6280   */\n      add\n        /* \"#utility.yul\":6258:6290   */\n      mstore\n        /* \"#utility.yul\":6073:6297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6303:6669   */\n    tag_179:\n        /* \"#utility.yul\":6445:6448   */\n      0x00\n        /* \"#utility.yul\":6466:6533   */\n      tag_267\n        /* \"#utility.yul\":6530:6532   */\n      0x25\n        /* \"#utility.yul\":6525:6528   */\n      dup4\n        /* \"#utility.yul\":6466:6533   */\n      tag_158\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6459:6533   */\n      swap2\n      pop\n        /* \"#utility.yul\":6542:6635   */\n      tag_268\n        /* \"#utility.yul\":6631:6634   */\n      dup3\n        /* \"#utility.yul\":6542:6635   */\n      tag_178\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6660:6662   */\n      0x40\n        /* \"#utility.yul\":6655:6658   */\n      dup3\n        /* \"#utility.yul\":6651:6663   */\n      add\n        /* \"#utility.yul\":6644:6663   */\n      swap1\n      pop\n        /* \"#utility.yul\":6303:6669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6675:7094   */\n    tag_101:\n        /* \"#utility.yul\":6841:6845   */\n      0x00\n        /* \"#utility.yul\":6879:6881   */\n      0x20\n        /* \"#utility.yul\":6868:6877   */\n      dup3\n        /* \"#utility.yul\":6864:6882   */\n      add\n        /* \"#utility.yul\":6856:6882   */\n      swap1\n      pop\n        /* \"#utility.yul\":6928:6937   */\n      dup2\n        /* \"#utility.yul\":6922:6926   */\n      dup2\n        /* \"#utility.yul\":6918:6938   */\n      sub\n        /* \"#utility.yul\":6914:6915   */\n      0x00\n        /* \"#utility.yul\":6903:6912   */\n      dup4\n        /* \"#utility.yul\":6899:6916   */\n      add\n        /* \"#utility.yul\":6892:6939   */\n      mstore\n        /* \"#utility.yul\":6956:7087   */\n      tag_270\n        /* \"#utility.yul\":7082:7086   */\n      dup2\n        /* \"#utility.yul\":6956:7087   */\n      tag_179\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6948:7087   */\n      swap1\n      pop\n        /* \"#utility.yul\":6675:7094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7100:7323   */\n    tag_180:\n        /* \"#utility.yul\":7240:7274   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7236:7237   */\n      0x00\n        /* \"#utility.yul\":7228:7234   */\n      dup3\n        /* \"#utility.yul\":7224:7238   */\n      add\n        /* \"#utility.yul\":7217:7275   */\n      mstore\n        /* \"#utility.yul\":7309:7315   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7304:7306   */\n      0x20\n        /* \"#utility.yul\":7296:7302   */\n      dup3\n        /* \"#utility.yul\":7292:7307   */\n      add\n        /* \"#utility.yul\":7285:7316   */\n      mstore\n        /* \"#utility.yul\":7100:7323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7329:7695   */\n    tag_181:\n        /* \"#utility.yul\":7471:7474   */\n      0x00\n        /* \"#utility.yul\":7492:7559   */\n      tag_273\n        /* \"#utility.yul\":7556:7558   */\n      0x24\n        /* \"#utility.yul\":7551:7554   */\n      dup4\n        /* \"#utility.yul\":7492:7559   */\n      tag_158\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7485:7559   */\n      swap2\n      pop\n        /* \"#utility.yul\":7568:7661   */\n      tag_274\n        /* \"#utility.yul\":7657:7660   */\n      dup3\n        /* \"#utility.yul\":7568:7661   */\n      tag_180\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7686:7688   */\n      0x40\n        /* \"#utility.yul\":7681:7684   */\n      dup3\n        /* \"#utility.yul\":7677:7689   */\n      add\n        /* \"#utility.yul\":7670:7689   */\n      swap1\n      pop\n        /* \"#utility.yul\":7329:7695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7701:8120   */\n    tag_113:\n        /* \"#utility.yul\":7867:7871   */\n      0x00\n        /* \"#utility.yul\":7905:7907   */\n      0x20\n        /* \"#utility.yul\":7894:7903   */\n      dup3\n        /* \"#utility.yul\":7890:7908   */\n      add\n        /* \"#utility.yul\":7882:7908   */\n      swap1\n      pop\n        /* \"#utility.yul\":7954:7963   */\n      dup2\n        /* \"#utility.yul\":7948:7952   */\n      dup2\n        /* \"#utility.yul\":7944:7964   */\n      sub\n        /* \"#utility.yul\":7940:7941   */\n      0x00\n        /* \"#utility.yul\":7929:7938   */\n      dup4\n        /* \"#utility.yul\":7925:7942   */\n      add\n        /* \"#utility.yul\":7918:7965   */\n      mstore\n        /* \"#utility.yul\":7982:8113   */\n      tag_276\n        /* \"#utility.yul\":8108:8112   */\n      dup2\n        /* \"#utility.yul\":7982:8113   */\n      tag_181\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7974:8113   */\n      swap1\n      pop\n        /* \"#utility.yul\":7701:8120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8126:8347   */\n    tag_182:\n        /* \"#utility.yul\":8266:8300   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8262:8263   */\n      0x00\n        /* \"#utility.yul\":8254:8260   */\n      dup3\n        /* \"#utility.yul\":8250:8264   */\n      add\n        /* \"#utility.yul\":8243:8301   */\n      mstore\n        /* \"#utility.yul\":8335:8339   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8330:8332   */\n      0x20\n        /* \"#utility.yul\":8322:8328   */\n      dup3\n        /* \"#utility.yul\":8318:8333   */\n      add\n        /* \"#utility.yul\":8311:8340   */\n      mstore\n        /* \"#utility.yul\":8126:8347   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8719   */\n    tag_183:\n        /* \"#utility.yul\":8495:8498   */\n      0x00\n        /* \"#utility.yul\":8516:8583   */\n      tag_279\n        /* \"#utility.yul\":8580:8582   */\n      0x22\n        /* \"#utility.yul\":8575:8578   */\n      dup4\n        /* \"#utility.yul\":8516:8583   */\n      tag_158\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8509:8583   */\n      swap2\n      pop\n        /* \"#utility.yul\":8592:8685   */\n      tag_280\n        /* \"#utility.yul\":8681:8684   */\n      dup3\n        /* \"#utility.yul\":8592:8685   */\n      tag_182\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8710:8712   */\n      0x40\n        /* \"#utility.yul\":8705:8708   */\n      dup3\n        /* \"#utility.yul\":8701:8713   */\n      add\n        /* \"#utility.yul\":8694:8713   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8725:9144   */\n    tag_116:\n        /* \"#utility.yul\":8891:8895   */\n      0x00\n        /* \"#utility.yul\":8929:8931   */\n      0x20\n        /* \"#utility.yul\":8918:8927   */\n      dup3\n        /* \"#utility.yul\":8914:8932   */\n      add\n        /* \"#utility.yul\":8906:8932   */\n      swap1\n      pop\n        /* \"#utility.yul\":8978:8987   */\n      dup2\n        /* \"#utility.yul\":8972:8976   */\n      dup2\n        /* \"#utility.yul\":8968:8988   */\n      sub\n        /* \"#utility.yul\":8964:8965   */\n      0x00\n        /* \"#utility.yul\":8953:8962   */\n      dup4\n        /* \"#utility.yul\":8949:8966   */\n      add\n        /* \"#utility.yul\":8942:8989   */\n      mstore\n        /* \"#utility.yul\":9006:9137   */\n      tag_282\n        /* \"#utility.yul\":9132:9136   */\n      dup2\n        /* \"#utility.yul\":9006:9137   */\n      tag_183\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8998:9137   */\n      swap1\n      pop\n        /* \"#utility.yul\":8725:9144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9150:9329   */\n    tag_184:\n        /* \"#utility.yul\":9290:9321   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9286:9287   */\n      0x00\n        /* \"#utility.yul\":9278:9284   */\n      dup3\n        /* \"#utility.yul\":9274:9288   */\n      add\n        /* \"#utility.yul\":9267:9322   */\n      mstore\n        /* \"#utility.yul\":9150:9329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9335:9701   */\n    tag_185:\n        /* \"#utility.yul\":9477:9480   */\n      0x00\n        /* \"#utility.yul\":9498:9565   */\n      tag_285\n        /* \"#utility.yul\":9562:9564   */\n      0x1d\n        /* \"#utility.yul\":9557:9560   */\n      dup4\n        /* \"#utility.yul\":9498:9565   */\n      tag_158\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9491:9565   */\n      swap2\n      pop\n        /* \"#utility.yul\":9574:9667   */\n      tag_286\n        /* \"#utility.yul\":9663:9666   */\n      dup3\n        /* \"#utility.yul\":9574:9667   */\n      tag_184\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9692:9694   */\n      0x20\n        /* \"#utility.yul\":9687:9690   */\n      dup3\n        /* \"#utility.yul\":9683:9695   */\n      add\n        /* \"#utility.yul\":9676:9695   */\n      swap1\n      pop\n        /* \"#utility.yul\":9335:9701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9707:10126   */\n    tag_123:\n        /* \"#utility.yul\":9873:9877   */\n      0x00\n        /* \"#utility.yul\":9911:9913   */\n      0x20\n        /* \"#utility.yul\":9900:9909   */\n      dup3\n        /* \"#utility.yul\":9896:9914   */\n      add\n        /* \"#utility.yul\":9888:9914   */\n      swap1\n      pop\n        /* \"#utility.yul\":9960:9969   */\n      dup2\n        /* \"#utility.yul\":9954:9958   */\n      dup2\n        /* \"#utility.yul\":9950:9970   */\n      sub\n        /* \"#utility.yul\":9946:9947   */\n      0x00\n        /* \"#utility.yul\":9935:9944   */\n      dup4\n        /* \"#utility.yul\":9931:9948   */\n      add\n        /* \"#utility.yul\":9924:9971   */\n      mstore\n        /* \"#utility.yul\":9988:10119   */\n      tag_288\n        /* \"#utility.yul\":10114:10118   */\n      dup2\n        /* \"#utility.yul\":9988:10119   */\n      tag_185\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9980:10119   */\n      swap1\n      pop\n        /* \"#utility.yul\":9707:10126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10132:10356   */\n    tag_186:\n        /* \"#utility.yul\":10272:10306   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10268:10269   */\n      0x00\n        /* \"#utility.yul\":10260:10266   */\n      dup3\n        /* \"#utility.yul\":10256:10270   */\n      add\n        /* \"#utility.yul\":10249:10307   */\n      mstore\n        /* \"#utility.yul\":10341:10348   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10336:10338   */\n      0x20\n        /* \"#utility.yul\":10328:10334   */\n      dup3\n        /* \"#utility.yul\":10324:10339   */\n      add\n        /* \"#utility.yul\":10317:10349   */\n      mstore\n        /* \"#utility.yul\":10132:10356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10362:10728   */\n    tag_187:\n        /* \"#utility.yul\":10504:10507   */\n      0x00\n        /* \"#utility.yul\":10525:10592   */\n      tag_291\n        /* \"#utility.yul\":10589:10591   */\n      0x25\n        /* \"#utility.yul\":10584:10587   */\n      dup4\n        /* \"#utility.yul\":10525:10592   */\n      tag_158\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10518:10592   */\n      swap2\n      pop\n        /* \"#utility.yul\":10601:10694   */\n      tag_292\n        /* \"#utility.yul\":10690:10693   */\n      dup3\n        /* \"#utility.yul\":10601:10694   */\n      tag_186\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10719:10721   */\n      0x40\n        /* \"#utility.yul\":10714:10717   */\n      dup3\n        /* \"#utility.yul\":10710:10722   */\n      add\n        /* \"#utility.yul\":10703:10722   */\n      swap1\n      pop\n        /* \"#utility.yul\":10362:10728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10734:11153   */\n    tag_129:\n        /* \"#utility.yul\":10900:10904   */\n      0x00\n        /* \"#utility.yul\":10938:10940   */\n      0x20\n        /* \"#utility.yul\":10927:10936   */\n      dup3\n        /* \"#utility.yul\":10923:10941   */\n      add\n        /* \"#utility.yul\":10915:10941   */\n      swap1\n      pop\n        /* \"#utility.yul\":10987:10996   */\n      dup2\n        /* \"#utility.yul\":10981:10985   */\n      dup2\n        /* \"#utility.yul\":10977:10997   */\n      sub\n        /* \"#utility.yul\":10973:10974   */\n      0x00\n        /* \"#utility.yul\":10962:10971   */\n      dup4\n        /* \"#utility.yul\":10958:10975   */\n      add\n        /* \"#utility.yul\":10951:10998   */\n      mstore\n        /* \"#utility.yul\":11015:11146   */\n      tag_294\n        /* \"#utility.yul\":11141:11145   */\n      dup2\n        /* \"#utility.yul\":11015:11146   */\n      tag_187\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11007:11146   */\n      swap1\n      pop\n        /* \"#utility.yul\":10734:11153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11159:11381   */\n    tag_188:\n        /* \"#utility.yul\":11299:11333   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11295:11296   */\n      0x00\n        /* \"#utility.yul\":11287:11293   */\n      dup3\n        /* \"#utility.yul\":11283:11297   */\n      add\n        /* \"#utility.yul\":11276:11334   */\n      mstore\n        /* \"#utility.yul\":11368:11373   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11363:11365   */\n      0x20\n        /* \"#utility.yul\":11355:11361   */\n      dup3\n        /* \"#utility.yul\":11351:11366   */\n      add\n        /* \"#utility.yul\":11344:11374   */\n      mstore\n        /* \"#utility.yul\":11159:11381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11387:11753   */\n    tag_189:\n        /* \"#utility.yul\":11529:11532   */\n      0x00\n        /* \"#utility.yul\":11550:11617   */\n      tag_297\n        /* \"#utility.yul\":11614:11616   */\n      0x23\n        /* \"#utility.yul\":11609:11612   */\n      dup4\n        /* \"#utility.yul\":11550:11617   */\n      tag_158\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11543:11617   */\n      swap2\n      pop\n        /* \"#utility.yul\":11626:11719   */\n      tag_298\n        /* \"#utility.yul\":11715:11718   */\n      dup3\n        /* \"#utility.yul\":11626:11719   */\n      tag_188\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":11744:11746   */\n      0x40\n        /* \"#utility.yul\":11739:11742   */\n      dup3\n        /* \"#utility.yul\":11735:11747   */\n      add\n        /* \"#utility.yul\":11728:11747   */\n      swap1\n      pop\n        /* \"#utility.yul\":11387:11753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11759:12178   */\n    tag_132:\n        /* \"#utility.yul\":11925:11929   */\n      0x00\n        /* \"#utility.yul\":11963:11965   */\n      0x20\n        /* \"#utility.yul\":11952:11961   */\n      dup3\n        /* \"#utility.yul\":11948:11966   */\n      add\n        /* \"#utility.yul\":11940:11966   */\n      swap1\n      pop\n        /* \"#utility.yul\":12012:12021   */\n      dup2\n        /* \"#utility.yul\":12006:12010   */\n      dup2\n        /* \"#utility.yul\":12002:12022   */\n      sub\n        /* \"#utility.yul\":11998:11999   */\n      0x00\n        /* \"#utility.yul\":11987:11996   */\n      dup4\n        /* \"#utility.yul\":11983:12000   */\n      add\n        /* \"#utility.yul\":11976:12023   */\n      mstore\n        /* \"#utility.yul\":12040:12171   */\n      tag_300\n        /* \"#utility.yul\":12166:12170   */\n      dup2\n        /* \"#utility.yul\":12040:12171   */\n      tag_189\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12032:12171   */\n      swap1\n      pop\n        /* \"#utility.yul\":11759:12178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12184:12409   */\n    tag_190:\n        /* \"#utility.yul\":12324:12358   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12320:12321   */\n      0x00\n        /* \"#utility.yul\":12312:12318   */\n      dup3\n        /* \"#utility.yul\":12308:12322   */\n      add\n        /* \"#utility.yul\":12301:12359   */\n      mstore\n        /* \"#utility.yul\":12393:12401   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12388:12390   */\n      0x20\n        /* \"#utility.yul\":12380:12386   */\n      dup3\n        /* \"#utility.yul\":12376:12391   */\n      add\n        /* \"#utility.yul\":12369:12402   */\n      mstore\n        /* \"#utility.yul\":12184:12409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12415:12781   */\n    tag_191:\n        /* \"#utility.yul\":12557:12560   */\n      0x00\n        /* \"#utility.yul\":12578:12645   */\n      tag_303\n        /* \"#utility.yul\":12642:12644   */\n      0x26\n        /* \"#utility.yul\":12637:12640   */\n      dup4\n        /* \"#utility.yul\":12578:12645   */\n      tag_158\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":12571:12645   */\n      swap2\n      pop\n        /* \"#utility.yul\":12654:12747   */\n      tag_304\n        /* \"#utility.yul\":12743:12746   */\n      dup3\n        /* \"#utility.yul\":12654:12747   */\n      tag_190\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":12772:12774   */\n      0x40\n        /* \"#utility.yul\":12767:12770   */\n      dup3\n        /* \"#utility.yul\":12763:12775   */\n      add\n        /* \"#utility.yul\":12756:12775   */\n      swap1\n      pop\n        /* \"#utility.yul\":12415:12781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12787:13206   */\n    tag_137:\n        /* \"#utility.yul\":12953:12957   */\n      0x00\n        /* \"#utility.yul\":12991:12993   */\n      0x20\n        /* \"#utility.yul\":12980:12989   */\n      dup3\n        /* \"#utility.yul\":12976:12994   */\n      add\n        /* \"#utility.yul\":12968:12994   */\n      swap1\n      pop\n        /* \"#utility.yul\":13040:13049   */\n      dup2\n        /* \"#utility.yul\":13034:13038   */\n      dup2\n        /* \"#utility.yul\":13030:13050   */\n      sub\n        /* \"#utility.yul\":13026:13027   */\n      0x00\n        /* \"#utility.yul\":13015:13024   */\n      dup4\n        /* \"#utility.yul\":13011:13028   */\n      add\n        /* \"#utility.yul\":13004:13051   */\n      mstore\n        /* \"#utility.yul\":13068:13199   */\n      tag_306\n        /* \"#utility.yul\":13194:13198   */\n      dup2\n        /* \"#utility.yul\":13068:13199   */\n      tag_191\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13060:13199   */\n      swap1\n      pop\n        /* \"#utility.yul\":12787:13206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13212:13392   */\n    tag_192:\n        /* \"#utility.yul\":13260:13337   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13257:13258   */\n      0x00\n        /* \"#utility.yul\":13250:13338   */\n      mstore\n        /* \"#utility.yul\":13357:13361   */\n      0x11\n        /* \"#utility.yul\":13354:13355   */\n      0x04\n        /* \"#utility.yul\":13347:13362   */\n      mstore\n        /* \"#utility.yul\":13381:13385   */\n      0x24\n        /* \"#utility.yul\":13378:13379   */\n      0x00\n        /* \"#utility.yul\":13371:13386   */\n      revert\n        /* \"#utility.yul\":13398:13589   */\n    tag_145:\n        /* \"#utility.yul\":13438:13441   */\n      0x00\n        /* \"#utility.yul\":13457:13477   */\n      tag_309\n        /* \"#utility.yul\":13475:13476   */\n      dup3\n        /* \"#utility.yul\":13457:13477   */\n      tag_169\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13452:13477   */\n      swap2\n      pop\n        /* \"#utility.yul\":13491:13511   */\n      tag_310\n        /* \"#utility.yul\":13509:13510   */\n      dup4\n        /* \"#utility.yul\":13491:13511   */\n      tag_169\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":13486:13511   */\n      swap3\n      pop\n        /* \"#utility.yul\":13534:13535   */\n      dup3\n        /* \"#utility.yul\":13531:13532   */\n      dup3\n        /* \"#utility.yul\":13527:13536   */\n      add\n        /* \"#utility.yul\":13520:13536   */\n      swap1\n      pop\n        /* \"#utility.yul\":13555:13558   */\n      dup1\n        /* \"#utility.yul\":13552:13553   */\n      dup3\n        /* \"#utility.yul\":13549:13559   */\n      gt\n        /* \"#utility.yul\":13546:13582   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":13562:13580   */\n      tag_312\n      tag_192\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":13546:13582   */\n    tag_311:\n        /* \"#utility.yul\":13398:13589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13595:13772   */\n    tag_193:\n        /* \"#utility.yul\":13735:13764   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":13731:13732   */\n      0x00\n        /* \"#utility.yul\":13723:13729   */\n      dup3\n        /* \"#utility.yul\":13719:13733   */\n      add\n        /* \"#utility.yul\":13712:13765   */\n      mstore\n        /* \"#utility.yul\":13595:13772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13778:14144   */\n    tag_194:\n        /* \"#utility.yul\":13920:13923   */\n      0x00\n        /* \"#utility.yul\":13941:14008   */\n      tag_315\n        /* \"#utility.yul\":14005:14007   */\n      0x1b\n        /* \"#utility.yul\":14000:14003   */\n      dup4\n        /* \"#utility.yul\":13941:14008   */\n      tag_158\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":13934:14008   */\n      swap2\n      pop\n        /* \"#utility.yul\":14017:14110   */\n      tag_316\n        /* \"#utility.yul\":14106:14109   */\n      dup3\n        /* \"#utility.yul\":14017:14110   */\n      tag_193\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":14135:14137   */\n      0x20\n        /* \"#utility.yul\":14130:14133   */\n      dup3\n        /* \"#utility.yul\":14126:14138   */\n      add\n        /* \"#utility.yul\":14119:14138   */\n      swap1\n      pop\n        /* \"#utility.yul\":13778:14144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14150:14569   */\n    tag_148:\n        /* \"#utility.yul\":14316:14320   */\n      0x00\n        /* \"#utility.yul\":14354:14356   */\n      0x20\n        /* \"#utility.yul\":14343:14352   */\n      dup3\n        /* \"#utility.yul\":14339:14357   */\n      add\n        /* \"#utility.yul\":14331:14357   */\n      swap1\n      pop\n        /* \"#utility.yul\":14403:14412   */\n      dup2\n        /* \"#utility.yul\":14397:14401   */\n      dup2\n        /* \"#utility.yul\":14393:14413   */\n      sub\n        /* \"#utility.yul\":14389:14390   */\n      0x00\n        /* \"#utility.yul\":14378:14387   */\n      dup4\n        /* \"#utility.yul\":14374:14391   */\n      add\n        /* \"#utility.yul\":14367:14414   */\n      mstore\n        /* \"#utility.yul\":14431:14562   */\n      tag_318\n        /* \"#utility.yul\":14557:14561   */\n      dup2\n        /* \"#utility.yul\":14431:14562   */\n      tag_194\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14423:14562   */\n      swap1\n      pop\n        /* \"#utility.yul\":14150:14569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14575:14755   */\n    tag_195:\n        /* \"#utility.yul\":14715:14747   */\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n        /* \"#utility.yul\":14711:14712   */\n      0x00\n        /* \"#utility.yul\":14703:14709   */\n      dup3\n        /* \"#utility.yul\":14699:14713   */\n      add\n        /* \"#utility.yul\":14692:14748   */\n      mstore\n        /* \"#utility.yul\":14575:14755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14761:15127   */\n    tag_196:\n        /* \"#utility.yul\":14903:14906   */\n      0x00\n        /* \"#utility.yul\":14924:14991   */\n      tag_321\n        /* \"#utility.yul\":14988:14990   */\n      0x1e\n        /* \"#utility.yul\":14983:14986   */\n      dup4\n        /* \"#utility.yul\":14924:14991   */\n      tag_158\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":14917:14991   */\n      swap2\n      pop\n        /* \"#utility.yul\":15000:15093   */\n      tag_322\n        /* \"#utility.yul\":15089:15092   */\n      dup3\n        /* \"#utility.yul\":15000:15093   */\n      tag_195\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":15118:15120   */\n      0x20\n        /* \"#utility.yul\":15113:15116   */\n      dup3\n        /* \"#utility.yul\":15109:15121   */\n      add\n        /* \"#utility.yul\":15102:15121   */\n      swap1\n      pop\n        /* \"#utility.yul\":14761:15127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15133:15552   */\n    tag_152:\n        /* \"#utility.yul\":15299:15303   */\n      0x00\n        /* \"#utility.yul\":15337:15339   */\n      0x20\n        /* \"#utility.yul\":15326:15335   */\n      dup3\n        /* \"#utility.yul\":15322:15340   */\n      add\n        /* \"#utility.yul\":15314:15340   */\n      swap1\n      pop\n        /* \"#utility.yul\":15386:15395   */\n      dup2\n        /* \"#utility.yul\":15380:15384   */\n      dup2\n        /* \"#utility.yul\":15376:15396   */\n      sub\n        /* \"#utility.yul\":15372:15373   */\n      0x00\n        /* \"#utility.yul\":15361:15370   */\n      dup4\n        /* \"#utility.yul\":15357:15374   */\n      add\n        /* \"#utility.yul\":15350:15397   */\n      mstore\n        /* \"#utility.yul\":15414:15545   */\n      tag_324\n        /* \"#utility.yul\":15540:15544   */\n      dup2\n        /* \"#utility.yul\":15414:15545   */\n      tag_196\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":15406:15545   */\n      swap1\n      pop\n        /* \"#utility.yul\":15133:15552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15558:15752   */\n    tag_154:\n        /* \"#utility.yul\":15598:15602   */\n      0x00\n        /* \"#utility.yul\":15618:15638   */\n      tag_326\n        /* \"#utility.yul\":15636:15637   */\n      dup3\n        /* \"#utility.yul\":15618:15638   */\n      tag_169\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":15613:15638   */\n      swap2\n      pop\n        /* \"#utility.yul\":15652:15672   */\n      tag_327\n        /* \"#utility.yul\":15670:15671   */\n      dup4\n        /* \"#utility.yul\":15652:15672   */\n      tag_169\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":15647:15672   */\n      swap3\n      pop\n        /* \"#utility.yul\":15696:15697   */\n      dup3\n        /* \"#utility.yul\":15693:15694   */\n      dup3\n        /* \"#utility.yul\":15689:15698   */\n      sub\n        /* \"#utility.yul\":15681:15698   */\n      swap1\n      pop\n        /* \"#utility.yul\":15720:15721   */\n      dup2\n        /* \"#utility.yul\":15714:15718   */\n      dup2\n        /* \"#utility.yul\":15711:15722   */\n      gt\n        /* \"#utility.yul\":15708:15745   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":15725:15743   */\n      tag_329\n      tag_192\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":15708:15745   */\n    tag_328:\n        /* \"#utility.yul\":15558:15752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122086e3274f03e4c85cb17c2837d2f08651f041bac0bc78a25307d65c5c6e42ae4464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:6",
										"nodeType": "YulBlock",
										"src": "0:8467:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2684:739:6",
													"nodeType": "YulBlock",
													"src": "2684:739:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:6",
																"nodeType": "YulBlock",
																"src": "2730:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:6"
																			},
																			"nativeSrc": "2732:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:6"
																		},
																		"nativeSrc": "2732:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:6"
																		},
																		"nativeSrc": "2701:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:6"
																},
																"nativeSrc": "2697:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:6"
															},
															"nativeSrc": "2694:119:6",
															"nodeType": "YulIf",
															"src": "2694:119:6"
														},
														{
															"nativeSrc": "2823:291:6",
															"nodeType": "YulBlock",
															"src": "2823:291:6",
															"statements": [
																{
																	"nativeSrc": "2838:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:6"
																				},
																				"nativeSrc": "2858:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:6"
																		},
																		"nativeSrc": "2852:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:6",
																		"nodeType": "YulBlock",
																		"src": "2923:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:6"
																					},
																					"nativeSrc": "2925:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:6"
																				},
																				"nativeSrc": "2925:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:6"
																		},
																		"nativeSrc": "2892:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:6"
																	},
																	"nativeSrc": "2889:117:6",
																	"nodeType": "YulIf",
																	"src": "2889:117:6"
																},
																{
																	"nativeSrc": "3020:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:6"
																				},
																				"nativeSrc": "3072:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:6"
																		},
																		"nativeSrc": "3030:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:6",
															"nodeType": "YulBlock",
															"src": "3124:292:6",
															"statements": [
																{
																	"nativeSrc": "3139:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:6"
																				},
																				"nativeSrc": "3159:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:6"
																		},
																		"nativeSrc": "3153:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:6",
																		"nodeType": "YulBlock",
																		"src": "3225:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:6"
																					},
																					"nativeSrc": "3227:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:6"
																				},
																				"nativeSrc": "3227:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:6"
																		},
																		"nativeSrc": "3194:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:6"
																	},
																	"nativeSrc": "3191:117:6",
																	"nodeType": "YulIf",
																	"src": "3191:117:6"
																},
																{
																	"nativeSrc": "3322:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:6"
																				},
																				"nativeSrc": "3374:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:6"
																		},
																		"nativeSrc": "3332:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:6",
														"nodeType": "YulTypedName",
														"src": "2646:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:6",
														"nodeType": "YulTypedName",
														"src": "2657:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:6",
														"nodeType": "YulTypedName",
														"src": "2669:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:6",
														"nodeType": "YulTypedName",
														"src": "2677:6:6",
														"type": ""
													}
												],
												"src": "2570:853:6"
											},
											{
												"body": {
													"nativeSrc": "3488:40:6",
													"nodeType": "YulBlock",
													"src": "3488:40:6",
													"statements": [
														{
															"nativeSrc": "3499:22:6",
															"nodeType": "YulAssignment",
															"src": "3499:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:6"
																},
																"nativeSrc": "3509:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:6",
														"nodeType": "YulTypedName",
														"src": "3471:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:6",
														"nodeType": "YulTypedName",
														"src": "3481:6:6",
														"type": ""
													}
												],
												"src": "3429:99:6"
											},
											{
												"body": {
													"nativeSrc": "3562:152:6",
													"nodeType": "YulBlock",
													"src": "3562:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:6"
																},
																"nativeSrc": "3572:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:6"
															},
															"nativeSrc": "3572:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:6"
																},
																"nativeSrc": "3669:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:6"
															},
															"nativeSrc": "3669:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:6"
																},
																"nativeSrc": "3693:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:6"
															},
															"nativeSrc": "3693:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:6"
											},
											{
												"body": {
													"nativeSrc": "3771:269:6",
													"nodeType": "YulBlock",
													"src": "3771:269:6",
													"statements": [
														{
															"nativeSrc": "3781:22:6",
															"nodeType": "YulAssignment",
															"src": "3781:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:6"
																},
																"nativeSrc": "3791:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:6"
																}
															]
														},
														{
															"nativeSrc": "3812:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:6"
																},
																"nativeSrc": "3838:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:6",
																"nodeType": "YulBlock",
																"src": "3889:51:6",
																"statements": [
																	{
																		"nativeSrc": "3903:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:6"
																			},
																			"nativeSrc": "3913:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:6"
																},
																"nativeSrc": "3862:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:6"
															},
															"nativeSrc": "3859:81:6",
															"nodeType": "YulIf",
															"src": "3859:81:6"
														},
														{
															"body": {
																"nativeSrc": "3992:42:6",
																"nodeType": "YulBlock",
																"src": "3992:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:6"
																			},
																			"nativeSrc": "4006:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:6"
																		},
																		"nativeSrc": "4006:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:6"
																		},
																		"nativeSrc": "3976:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:6"
																},
																"nativeSrc": "3953:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:6"
															},
															"nativeSrc": "3950:84:6",
															"nodeType": "YulIf",
															"src": "3950:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:6",
														"nodeType": "YulTypedName",
														"src": "3755:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:6",
														"nodeType": "YulTypedName",
														"src": "3764:6:6",
														"type": ""
													}
												],
												"src": "3720:320:6"
											},
											{
												"body": {
													"nativeSrc": "4100:87:6",
													"nodeType": "YulBlock",
													"src": "4100:87:6",
													"statements": [
														{
															"nativeSrc": "4110:11:6",
															"nodeType": "YulAssignment",
															"src": "4110:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:6",
																"nodeType": "YulIdentifier",
																"src": "4118:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:6"
																},
																"nativeSrc": "4131:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:6"
															},
															"nativeSrc": "4131:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:6"
														},
														{
															"nativeSrc": "4154:26:6",
															"nodeType": "YulAssignment",
															"src": "4154:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:6"
																},
																"nativeSrc": "4162:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:6",
														"nodeType": "YulTypedName",
														"src": "4087:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:6",
														"nodeType": "YulTypedName",
														"src": "4095:4:6",
														"type": ""
													}
												],
												"src": "4046:141:6"
											},
											{
												"body": {
													"nativeSrc": "4237:49:6",
													"nodeType": "YulBlock",
													"src": "4237:49:6",
													"statements": [
														{
															"nativeSrc": "4247:33:6",
															"nodeType": "YulAssignment",
															"src": "4247:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:6"
																		},
																		"nativeSrc": "4261:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:6"
																},
																"nativeSrc": "4257:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:6",
														"nodeType": "YulTypedName",
														"src": "4220:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:6",
														"nodeType": "YulTypedName",
														"src": "4230:6:6",
														"type": ""
													}
												],
												"src": "4193:93:6"
											},
											{
												"body": {
													"nativeSrc": "4345:54:6",
													"nodeType": "YulBlock",
													"src": "4345:54:6",
													"statements": [
														{
															"nativeSrc": "4355:37:6",
															"nodeType": "YulAssignment",
															"src": "4355:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:6"
																},
																"nativeSrc": "4376:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:6",
														"nodeType": "YulTypedName",
														"src": "4320:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:6",
														"nodeType": "YulTypedName",
														"src": "4326:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:6",
														"nodeType": "YulTypedName",
														"src": "4336:8:6",
														"type": ""
													}
												],
												"src": "4292:107:6"
											},
											{
												"body": {
													"nativeSrc": "4481:317:6",
													"nodeType": "YulBlock",
													"src": "4481:317:6",
													"statements": [
														{
															"nativeSrc": "4491:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:6"
																},
																"nativeSrc": "4508:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:6",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:6"
																},
																"nativeSrc": "4547:97:6",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:6",
															"nodeType": "YulAssignment",
															"src": "4653:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:6"
																},
																"nativeSrc": "4665:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:6"
																}
															]
														},
														{
															"nativeSrc": "4713:30:6",
															"nodeType": "YulAssignment",
															"src": "4713:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:6"
																		},
																		"nativeSrc": "4733:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:6"
																},
																"nativeSrc": "4722:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:6"
																}
															]
														},
														{
															"nativeSrc": "4752:40:6",
															"nodeType": "YulAssignment",
															"src": "4752:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:6"
																		},
																		"nativeSrc": "4772:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:6"
																},
																"nativeSrc": "4762:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:6",
														"nodeType": "YulTypedName",
														"src": "4442:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:6",
														"nodeType": "YulTypedName",
														"src": "4449:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:6",
														"nodeType": "YulTypedName",
														"src": "4461:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:6",
														"nodeType": "YulTypedName",
														"src": "4474:6:6",
														"type": ""
													}
												],
												"src": "4405:393:6"
											},
											{
												"body": {
													"nativeSrc": "4849:32:6",
													"nodeType": "YulBlock",
													"src": "4849:32:6",
													"statements": [
														{
															"nativeSrc": "4859:16:6",
															"nodeType": "YulAssignment",
															"src": "4859:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:6",
																"nodeType": "YulIdentifier",
																"src": "4870:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:6",
														"nodeType": "YulTypedName",
														"src": "4831:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:6",
														"nodeType": "YulTypedName",
														"src": "4841:7:6",
														"type": ""
													}
												],
												"src": "4804:77:6"
											},
											{
												"body": {
													"nativeSrc": "4919:28:6",
													"nodeType": "YulBlock",
													"src": "4919:28:6",
													"statements": [
														{
															"nativeSrc": "4929:12:6",
															"nodeType": "YulAssignment",
															"src": "4929:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:6",
																"nodeType": "YulIdentifier",
																"src": "4936:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:6",
														"nodeType": "YulTypedName",
														"src": "4905:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:6",
														"nodeType": "YulTypedName",
														"src": "4915:3:6",
														"type": ""
													}
												],
												"src": "4887:60:6"
											},
											{
												"body": {
													"nativeSrc": "5013:82:6",
													"nodeType": "YulBlock",
													"src": "5013:82:6",
													"statements": [
														{
															"nativeSrc": "5023:66:6",
															"nodeType": "YulAssignment",
															"src": "5023:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:6"
																				},
																				"nativeSrc": "5063:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:6"
																		},
																		"nativeSrc": "5054:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:6"
																},
																"nativeSrc": "5036:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:6",
														"nodeType": "YulTypedName",
														"src": "4993:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:6",
														"nodeType": "YulTypedName",
														"src": "5003:9:6",
														"type": ""
													}
												],
												"src": "4953:142:6"
											},
											{
												"body": {
													"nativeSrc": "5148:28:6",
													"nodeType": "YulBlock",
													"src": "5148:28:6",
													"statements": [
														{
															"nativeSrc": "5158:12:6",
															"nodeType": "YulAssignment",
															"src": "5158:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:6",
																"nodeType": "YulIdentifier",
																"src": "5165:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:6",
														"nodeType": "YulTypedName",
														"src": "5134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:6",
														"nodeType": "YulTypedName",
														"src": "5144:3:6",
														"type": ""
													}
												],
												"src": "5101:75:6"
											},
											{
												"body": {
													"nativeSrc": "5258:193:6",
													"nodeType": "YulBlock",
													"src": "5258:193:6",
													"statements": [
														{
															"nativeSrc": "5268:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:6"
																},
																"nativeSrc": "5292:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:6",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:6"
																				},
																				"nativeSrc": "5381:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:6"
																				},
																				"nativeSrc": "5402:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:6"
																		},
																		"nativeSrc": "5353:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:6"
																},
																"nativeSrc": "5340:105:6",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:6"
															},
															"nativeSrc": "5340:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:6",
														"nodeType": "YulTypedName",
														"src": "5235:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:6",
														"nodeType": "YulTypedName",
														"src": "5241:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:6",
														"nodeType": "YulTypedName",
														"src": "5249:7:6",
														"type": ""
													}
												],
												"src": "5182:269:6"
											},
											{
												"body": {
													"nativeSrc": "5506:24:6",
													"nodeType": "YulBlock",
													"src": "5506:24:6",
													"statements": [
														{
															"nativeSrc": "5516:8:6",
															"nodeType": "YulAssignment",
															"src": "5516:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:6",
																"nodeType": "YulLiteral",
																"src": "5523:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:6",
														"nodeType": "YulTypedName",
														"src": "5502:3:6",
														"type": ""
													}
												],
												"src": "5457:73:6"
											},
											{
												"body": {
													"nativeSrc": "5589:136:6",
													"nodeType": "YulBlock",
													"src": "5589:136:6",
													"statements": [
														{
															"nativeSrc": "5599:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:6"
																},
																"nativeSrc": "5613:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:6"
																},
																"nativeSrc": "5654:65:6",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:6"
															},
															"nativeSrc": "5654:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:6",
														"nodeType": "YulTypedName",
														"src": "5575:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:6",
														"nodeType": "YulTypedName",
														"src": "5581:6:6",
														"type": ""
													}
												],
												"src": "5536:189:6"
											},
											{
												"body": {
													"nativeSrc": "5781:136:6",
													"nodeType": "YulBlock",
													"src": "5781:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:6",
																"nodeType": "YulBlock",
																"src": "5848:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:6"
																			},
																			"nativeSrc": "5862:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:6"
																		},
																		"nativeSrc": "5862:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:6"
																},
																"nativeSrc": "5798:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:6"
															},
															"nativeSrc": "5791:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:6",
																"nodeType": "YulBlock",
																"src": "5813:26:6",
																"statements": [
																	{
																		"nativeSrc": "5815:22:6",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:6"
																			},
																			"nativeSrc": "5824:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:6",
																"nodeType": "YulBlock",
																"src": "5795:2:6",
																"statements": []
															},
															"src": "5791:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:6",
														"nodeType": "YulTypedName",
														"src": "5769:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:6",
														"nodeType": "YulTypedName",
														"src": "5776:3:6",
														"type": ""
													}
												],
												"src": "5731:186:6"
											},
											{
												"body": {
													"nativeSrc": "6002:464:6",
													"nodeType": "YulBlock",
													"src": "6002:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:6",
																"nodeType": "YulBlock",
																"src": "6028:431:6",
																"statements": [
																	{
																		"nativeSrc": "6042:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:6"
																			},
																			"nativeSrc": "6058:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:6"
																					},
																					"nativeSrc": "6142:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:6"
																			},
																			"nativeSrc": "6128:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:6",
																			"nodeType": "YulBlock",
																			"src": "6329:27:6",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:6",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:6",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:6"
																			},
																			"nativeSrc": "6310:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:6"
																		},
																		"nativeSrc": "6307:49:6",
																		"nodeType": "YulIf",
																		"src": "6307:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:6"
																							},
																							"nativeSrc": "6425:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:6"
																					},
																					"nativeSrc": "6411:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:6"
																			},
																			"nativeSrc": "6369:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:6"
																		},
																		"nativeSrc": "6369:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:6"
																},
																"nativeSrc": "6016:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:6"
															},
															"nativeSrc": "6013:446:6",
															"nodeType": "YulIf",
															"src": "6013:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:6",
														"nodeType": "YulTypedName",
														"src": "5978:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:6",
														"nodeType": "YulTypedName",
														"src": "5985:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:6",
														"nodeType": "YulTypedName",
														"src": "5990:10:6",
														"type": ""
													}
												],
												"src": "5923:543:6"
											},
											{
												"body": {
													"nativeSrc": "6535:54:6",
													"nodeType": "YulBlock",
													"src": "6535:54:6",
													"statements": [
														{
															"nativeSrc": "6545:37:6",
															"nodeType": "YulAssignment",
															"src": "6545:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:6"
																},
																"nativeSrc": "6566:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:6",
														"nodeType": "YulTypedName",
														"src": "6510:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:6",
														"nodeType": "YulTypedName",
														"src": "6516:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:6",
														"nodeType": "YulTypedName",
														"src": "6526:8:6",
														"type": ""
													}
												],
												"src": "6472:117:6"
											},
											{
												"body": {
													"nativeSrc": "6646:118:6",
													"nodeType": "YulBlock",
													"src": "6646:118:6",
													"statements": [
														{
															"nativeSrc": "6656:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:6"
																				},
																				"nativeSrc": "6701:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:6"
																				},
																				"nativeSrc": "6716:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:6"
																		},
																		"nativeSrc": "6672:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:6"
																},
																"nativeSrc": "6668:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:6",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:6",
															"nodeType": "YulAssignment",
															"src": "6733:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:6"
																},
																"nativeSrc": "6743:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:6",
														"nodeType": "YulTypedName",
														"src": "6623:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:6",
														"nodeType": "YulTypedName",
														"src": "6629:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:6",
														"nodeType": "YulTypedName",
														"src": "6639:6:6",
														"type": ""
													}
												],
												"src": "6595:169:6"
											},
											{
												"body": {
													"nativeSrc": "6850:214:6",
													"nodeType": "YulBlock",
													"src": "6850:214:6",
													"statements": [
														{
															"nativeSrc": "6983:37:6",
															"nodeType": "YulAssignment",
															"src": "6983:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:6"
																},
																"nativeSrc": "6991:29:6",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:6"
																}
															]
														},
														{
															"nativeSrc": "7029:29:6",
															"nodeType": "YulAssignment",
															"src": "7029:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:6"
																		},
																		"nativeSrc": "7046:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:6"
																},
																"nativeSrc": "7037:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:6",
														"nodeType": "YulTypedName",
														"src": "6831:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:6",
														"nodeType": "YulTypedName",
														"src": "6837:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:6",
														"nodeType": "YulTypedName",
														"src": "6845:4:6",
														"type": ""
													}
												],
												"src": "6769:295:6"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:6",
													"nodeType": "YulBlock",
													"src": "7161:1303:6",
													"statements": [
														{
															"nativeSrc": "7172:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:6"
																},
																"nativeSrc": "7186:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:6",
																"nodeType": "YulBlock",
																"src": "7308:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:6"
																			},
																			"nativeSrc": "7310:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:6"
																		},
																		"nativeSrc": "7310:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:6"
																},
																"nativeSrc": "7277:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:6"
															},
															"nativeSrc": "7274:56:6",
															"nodeType": "YulIf",
															"src": "7274:56:6"
														},
														{
															"nativeSrc": "7340:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:6"
																		},
																		"nativeSrc": "7380:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:6"
																},
																"nativeSrc": "7354:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:6"
																},
																"nativeSrc": "7439:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:6"
															},
															"nativeSrc": "7439:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:6"
														},
														{
															"nativeSrc": "7516:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:6",
																"nodeType": "YulLiteral",
																"src": "7533:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:6",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:6",
															"nodeType": "YulAssignment",
															"src": "7544:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:6",
																"nodeType": "YulLiteral",
																"src": "7557:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:6",
																		"nodeType": "YulBlock",
																		"src": "7608:611:6",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:6",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:6"
																							},
																							"nativeSrc": "7649:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:6"
																					},
																					"nativeSrc": "7637:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:6",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:6"
																					},
																					"nativeSrc": "7687:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:6",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:6",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:6",
																					"nodeType": "YulBlock",
																					"src": "7805:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:6"
																												},
																												"nativeSrc": "7844:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:6"
																										},
																										"nativeSrc": "7838:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:6"
																								},
																								"nativeSrc": "7823:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:6"
																							},
																							"nativeSrc": "7823:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:6"
																						},
																						{
																							"nativeSrc": "7882:24:6",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:6",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:6"
																								},
																								"nativeSrc": "7892:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:6",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:6",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:6"
																								},
																								"nativeSrc": "7936:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:6"
																					},
																					"nativeSrc": "7768:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:6"
																				},
																				"nativeSrc": "7760:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:6",
																					"nodeType": "YulBlock",
																					"src": "7783:21:6",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:6",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:6",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:6"
																								},
																								"nativeSrc": "7790:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:6",
																					"nodeType": "YulBlock",
																					"src": "7764:3:6",
																					"statements": []
																				},
																				"src": "7760:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:6",
																					"nodeType": "YulBlock",
																					"src": "8004:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:6"
																										},
																										"nativeSrc": "8045:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:6"
																								},
																								"nativeSrc": "8039:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:6"
																												},
																												"nativeSrc": "8127:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:6"
																										},
																										"nativeSrc": "8097:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:6"
																								},
																								"nativeSrc": "8082:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:6"
																							},
																							"nativeSrc": "8082:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:6"
																					},
																					"nativeSrc": "7984:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:6"
																				},
																				"nativeSrc": "7981:179:6",
																				"nodeType": "YulIf",
																				"src": "7981:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:6",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:6"
																									},
																									"nativeSrc": "8190:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:6",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:6"
																							},
																							"nativeSrc": "8186:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:6"
																					},
																					"nativeSrc": "8173:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:6"
																				},
																				"nativeSrc": "8173:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:6"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:6",
																	"nodeType": "YulCase",
																	"src": "7601:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:6",
																		"nodeType": "YulBlock",
																		"src": "8236:222:6",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:6",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:6",
																					"nodeType": "YulBlock",
																					"src": "8287:67:6",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:6",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:6"
																										},
																										"nativeSrc": "8320:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:6"
																								},
																								"nativeSrc": "8314:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:6"
																				},
																				"nativeSrc": "8277:77:6",
																				"nodeType": "YulIf",
																				"src": "8277:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:6"
																							},
																							"nativeSrc": "8380:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:6"
																					},
																					"nativeSrc": "8367:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:6"
																				},
																				"nativeSrc": "8367:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:6"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:6",
																	"nodeType": "YulCase",
																	"src": "8228:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:6"
																},
																"nativeSrc": "7578:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:6"
															},
															"nativeSrc": "7571:887:6",
															"nodeType": "YulSwitch",
															"src": "7571:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:6",
														"nodeType": "YulTypedName",
														"src": "7150:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:6",
														"nodeType": "YulTypedName",
														"src": "7156:3:6",
														"type": ""
													}
												],
												"src": "7069:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516118b83803806118b8833981810160405281019061003191906101a5565b8160039081610040919061042b565b508060049081610050919061042b565b5050506104fa565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100b782610071565b810181811067ffffffffffffffff821117156100d6576100d5610081565b5b80604052505050565b5f6100e8610058565b90506100f482826100ae565b919050565b5f67ffffffffffffffff82111561011357610112610081565b5b61011c82610071565b9050602081019050919050565b8281835e5f83830152505050565b5f610149610144846100f9565b6100df565b9050828152602081018484840111156101655761016461006d565b5b610170848285610129565b509392505050565b5f82601f83011261018c5761018b610069565b5b815161019c848260208601610137565b91505092915050565b5f5f604083850312156101bb576101ba610061565b5b5f83015167ffffffffffffffff8111156101d8576101d7610065565b5b6101e485828601610178565b925050602083015167ffffffffffffffff81111561020557610204610065565b5b61021185828601610178565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026957607f821691505b60208210810361027c5761027b610225565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a3565b6102e886836102a3565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032c61032761032284610300565b610309565b610300565b9050919050565b5f819050919050565b61034583610312565b61035961035182610333565b8484546102af565b825550505050565b5f5f905090565b610370610361565b61037b81848461033c565b505050565b5b8181101561039e576103935f82610368565b600181019050610381565b5050565b601f8211156103e3576103b481610282565b6103bd84610294565b810160208510156103cc578190505b6103e06103d885610294565b830182610380565b50505b505050565b5f82821c905092915050565b5f6104035f19846008026103e8565b1980831691505092915050565b5f61041b83836103f4565b9150826002028217905092915050565b6104348261021b565b67ffffffffffffffff81111561044d5761044c610081565b5b6104578254610252565b6104628282856103a2565b5f60209050601f831160018114610493575f8415610481578287015190505b61048b8582610410565b8655506104f2565b601f1984166104a186610282565b5f5b828110156104c8578489015182556001820191506020850194506020810190506104a3565b868310156104e557848901516104e1601f8916826103f4565b8355505b6001600288020188555050505b505050505050565b6113b1806105075f395ff3fe608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f5ffd5b6100b3610273565b6040516100c09190610bc8565b60405180910390f35b6100e360048036038101906100de9190610c79565b610303565b6040516100f09190610cd1565b60405180910390f35b610101610325565b60405161010e9190610cf9565b60405180910390f35b610131600480360381019061012c9190610d12565b61032e565b60405161013e9190610cd1565b60405180910390f35b61014f61035c565b60405161015c9190610d7d565b60405180910390f35b61017f600480360381019061017a9190610c79565b610364565b60405161018c9190610cd1565b60405180910390f35b6101af60048036038101906101aa9190610d96565b610398565b6040516101bc9190610cf9565b60405180910390f35b6101cd6103dd565b6040516101da9190610bc8565b60405180910390f35b6101fd60048036038101906101f89190610c79565b61046d565b60405161020a9190610cd1565b60405180910390f35b61022d60048036038101906102289190610c79565b6104e9565b60405161023a9190610cd1565b60405180910390f35b61025d60048036038101906102589190610dc1565b61050b565b60405161026a9190610cf9565b60405180910390f35b60606003805461028290610e2c565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610e2c565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f5f61030d61058d565b905061031a818585610594565b600191505092915050565b5f600254905090565b5f5f61033861058d565b9050610345858285610757565b6103508585856107e9565b60019150509392505050565b5f6012905090565b5f5f61036e61058d565b905061038d8185610388610382858961050b565b87610a99565b610594565b600191505092915050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ec90610e2c565b80601f016020809104026020016040519081016040528092919081815260200182805461041890610e2c565b80156104635780601f1061043a57610100808354040283529160200191610463565b820191905f5260205f20905b81548152906001019060200180831161044657829003601f168201915b5050505050905090565b5f5f61047761058d565b90505f610484828661050b565b9050838110156104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610ecc565b60405180910390fd5b6104dd82866104d88488610af6565b610594565b60019250505092915050565b5f5f6104f361058d565b90506105008185856107e9565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990610f5a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790610fe8565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161074a9190610cf9565b60405180910390a3505050565b5f610762848461050b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107e357818110156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590611050565b60405180910390fd5b6107e284846107dd8486610af6565b610594565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e906110de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bc9061116c565b60405180910390fd5b6108d0838383610b4e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a906111fa565b60405180910390fd5b61095d8183610af6565b5f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109e35f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483610a99565b5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a809190610cf9565b60405180910390a3610a93848484610b53565b50505050565b5f5f8284610aa79190611245565b905083811015610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae3906112c2565b60405180910390fd5b8091505092915050565b5f82821115610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b319061132a565b60405180910390fd5b8183610b469190611348565b905092915050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b9a82610b58565b610ba48185610b62565b9350610bb4818560208601610b72565b610bbd81610b80565b840191505092915050565b5f6020820190508181035f830152610be08184610b90565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1582610bec565b9050919050565b610c2581610c0b565b8114610c2f575f5ffd5b50565b5f81359050610c4081610c1c565b92915050565b5f819050919050565b610c5881610c46565b8114610c62575f5ffd5b50565b5f81359050610c7381610c4f565b92915050565b5f5f60408385031215610c8f57610c8e610be8565b5b5f610c9c85828601610c32565b9250506020610cad85828601610c65565b9150509250929050565b5f8115159050919050565b610ccb81610cb7565b82525050565b5f602082019050610ce45f830184610cc2565b92915050565b610cf381610c46565b82525050565b5f602082019050610d0c5f830184610cea565b92915050565b5f5f5f60608486031215610d2957610d28610be8565b5b5f610d3686828701610c32565b9350506020610d4786828701610c32565b9250506040610d5886828701610c65565b9150509250925092565b5f60ff82169050919050565b610d7781610d62565b82525050565b5f602082019050610d905f830184610d6e565b92915050565b5f60208284031215610dab57610daa610be8565b5b5f610db884828501610c32565b91505092915050565b5f5f60408385031215610dd757610dd6610be8565b5b5f610de485828601610c32565b9250506020610df585828601610c32565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e4357607f821691505b602082108103610e5657610e55610dff565b5b50919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610eb6602583610b62565b9150610ec182610e5c565b604082019050919050565b5f6020820190508181035f830152610ee381610eaa565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610f44602483610b62565b9150610f4f82610eea565b604082019050919050565b5f6020820190508181035f830152610f7181610f38565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610fd2602283610b62565b9150610fdd82610f78565b604082019050919050565b5f6020820190508181035f830152610fff81610fc6565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f61103a601d83610b62565b915061104582611006565b602082019050919050565b5f6020820190508181035f8301526110678161102e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6110c8602583610b62565b91506110d38261106e565b604082019050919050565b5f6020820190508181035f8301526110f5816110bc565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611156602383610b62565b9150611161826110fc565b604082019050919050565b5f6020820190508181035f8301526111838161114a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f6111e4602683610b62565b91506111ef8261118a565b604082019050919050565b5f6020820190508181035f830152611211816111d8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61124f82610c46565b915061125a83610c46565b925082820190508082111561127257611271611218565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f6112ac601b83610b62565b91506112b782611278565b602082019050919050565b5f6020820190508181035f8301526112d9816112a0565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f7700005f82015250565b5f611314601e83610b62565b915061131f826112e0565b602082019050919050565b5f6020820190508181035f83015261134181611308565b9050919050565b5f61135282610c46565b915061135d83610c46565b925082820390508181111561137557611374611218565b5b9291505056fea264697066735822122086e3274f03e4c85cb17c2837d2f08651f041bac0bc78a25307d65c5c6e42ae4464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18B8 CODESIZE SUB DUP1 PUSH2 0x18B8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1A5 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x40 SWAP2 SWAP1 PUSH2 0x42B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x42B JUMP JUMPDEST POP POP POP PUSH2 0x4FA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xB7 DUP3 PUSH2 0x71 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD6 JUMPI PUSH2 0xD5 PUSH2 0x81 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE8 PUSH2 0x58 JUMP JUMPDEST SWAP1 POP PUSH2 0xF4 DUP3 DUP3 PUSH2 0xAE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x113 JUMPI PUSH2 0x112 PUSH2 0x81 JUMP JUMPDEST JUMPDEST PUSH2 0x11C DUP3 PUSH2 0x71 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x149 PUSH2 0x144 DUP5 PUSH2 0xF9 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x6D JUMP JUMPDEST JUMPDEST PUSH2 0x170 DUP5 DUP3 DUP6 PUSH2 0x129 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18C JUMPI PUSH2 0x18B PUSH2 0x69 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x19C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BA PUSH2 0x61 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D8 JUMPI PUSH2 0x1D7 PUSH2 0x65 JUMP JUMPDEST JUMPDEST PUSH2 0x1E4 DUP6 DUP3 DUP7 ADD PUSH2 0x178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205 JUMPI PUSH2 0x204 PUSH2 0x65 JUMP JUMPDEST JUMPDEST PUSH2 0x211 DUP6 DUP3 DUP7 ADD PUSH2 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x269 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x225 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x2E8 DUP7 DUP4 PUSH2 0x2A3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32C PUSH2 0x327 PUSH2 0x322 DUP5 PUSH2 0x300 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345 DUP4 PUSH2 0x312 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x351 DUP3 PUSH2 0x333 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2AF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x361 JUMP JUMPDEST PUSH2 0x37B DUP2 DUP5 DUP5 PUSH2 0x33C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39E JUMPI PUSH2 0x393 PUSH0 DUP3 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x381 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x3B4 DUP2 PUSH2 0x282 JUMP JUMPDEST PUSH2 0x3BD DUP5 PUSH2 0x294 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E0 PUSH2 0x3D8 DUP6 PUSH2 0x294 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x380 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x403 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41B DUP4 DUP4 PUSH2 0x3F4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x434 DUP3 PUSH2 0x21B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44D JUMPI PUSH2 0x44C PUSH2 0x81 JUMP JUMPDEST JUMPDEST PUSH2 0x457 DUP3 SLOAD PUSH2 0x252 JUMP JUMPDEST PUSH2 0x462 DUP3 DUP3 DUP6 PUSH2 0x3A2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x493 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x481 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48B DUP6 DUP3 PUSH2 0x410 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A1 DUP7 PUSH2 0x282 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13B1 DUP1 PUSH2 0x507 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x30D PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x338 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x36E PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x38D DUP2 DUP6 PUSH2 0x388 PUSH2 0x382 DUP6 DUP10 PUSH2 0x50B JUMP JUMPDEST DUP8 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x463 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x463 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x446 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x477 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x484 DUP3 DUP7 PUSH2 0x50B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C0 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP7 PUSH2 0x4D8 DUP5 DUP9 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4F3 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x500 DUP2 DUP6 DUP6 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F9 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x762 DUP5 DUP5 PUSH2 0x50B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7E3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E2 DUP5 DUP5 PUSH2 0x7DD DUP5 DUP7 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84E SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 DUP4 DUP4 DUP4 PUSH2 0xB4E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95D DUP2 DUP4 PUSH2 0xAF6 JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9E3 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA93 DUP5 DUP5 DUP5 PUSH2 0xB53 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP5 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x1245 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x12C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9A DUP3 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0xBA4 DUP2 DUP6 PUSH2 0xB62 JUMP JUMPDEST SWAP4 POP PUSH2 0xBB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xBBD DUP2 PUSH2 0xB80 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE0 DUP2 DUP5 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP2 EQ PUSH2 0xC2F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC40 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP2 EQ PUSH2 0xC62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC73 DUP2 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8E PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9C DUP6 DUP3 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAD DUP6 DUP3 DUP7 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xCB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE4 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0C PUSH0 DUP4 ADD DUP5 PUSH2 0xCEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD36 DUP7 DUP3 DUP8 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD47 DUP7 DUP3 DUP8 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD58 DUP7 DUP3 DUP8 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0xD62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD90 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH2 0xDAA PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB8 DUP5 DUP3 DUP6 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH2 0xDD6 PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDE4 DUP6 DUP3 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDF5 DUP6 DUP3 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xDFF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB6 PUSH1 0x25 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC1 DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE3 DUP2 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF44 PUSH1 0x24 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4F DUP3 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF71 DUP2 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD2 PUSH1 0x22 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDD DUP3 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFFF DUP2 PUSH2 0xFC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103A PUSH1 0x1D DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x1045 DUP3 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1067 DUP2 PUSH2 0x102E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C8 PUSH1 0x25 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D3 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F5 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1156 PUSH1 0x23 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x1161 DUP3 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1183 DUP2 PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E4 PUSH1 0x26 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EF DUP3 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1211 DUP2 PUSH2 0x11D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x124F DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0x125A DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12AC PUSH1 0x1B DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x12B7 DUP3 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12D9 DUP2 PUSH2 0x12A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1314 PUSH1 0x1E DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x131F DUP3 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1341 DUP2 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1352 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0x135D DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH2 0x1374 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE3 0x27 0x4F SUB 0xE4 0xC8 TLOAD 0xB1 PUSH29 0x2837D2F08651F041BAC0BC78A25307D65C5C6E42AE4464736F6C634300 ADDMOD SHL STOP CALLER ",
							"sourceMap": "1500:11819:1:-:0;;;1964:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2039:5;2031;:13;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;:::i;:::-;;1964:116;;1500:11819;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;1500:11819:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_638": {
									"entryPoint": 2899,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_571": {
									"entryPoint": 1428,
									"id": 571,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_627": {
									"entryPoint": 2894,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 1421,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_616": {
									"entryPoint": 1879,
									"id": 616,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 2025,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_968": {
									"entryPoint": 2713,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_164": {
									"entryPoint": 1291,
									"id": 164,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_189": {
									"entryPoint": 771,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_121": {
									"entryPoint": 920,
									"id": 121,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_97": {
									"entryPoint": 860,
									"id": 97,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_296": {
									"entryPoint": 1133,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_253": {
									"entryPoint": 868,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_77": {
									"entryPoint": 627,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_990": {
									"entryPoint": 2806,
									"id": 990,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_87": {
									"entryPoint": 989,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_107": {
									"entryPoint": 805,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_222": {
									"entryPoint": 814,
									"id": 222,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_146": {
									"entryPoint": 1257,
									"id": 146,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862": {
									"entryPoint": 4832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15755:6",
										"nodeType": "YulBlock",
										"src": "0:15755:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5164:391:6",
													"nodeType": "YulBlock",
													"src": "5164:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:6",
																"nodeType": "YulBlock",
																"src": "5210:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:6"
																			},
																			"nativeSrc": "5212:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:6"
																		},
																		"nativeSrc": "5212:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:6"
																},
																"nativeSrc": "5177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:6"
															},
															"nativeSrc": "5174:119:6",
															"nodeType": "YulIf",
															"src": "5174:119:6"
														},
														{
															"nativeSrc": "5303:117:6",
															"nodeType": "YulBlock",
															"src": "5303:117:6",
															"statements": [
																{
																	"nativeSrc": "5318:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:6"
																				},
																				"nativeSrc": "5378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:6"
																		},
																		"nativeSrc": "5357:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:6",
															"nodeType": "YulBlock",
															"src": "5430:118:6",
															"statements": [
																{
																	"nativeSrc": "5445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:6"
																				},
																				"nativeSrc": "5506:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:6"
																		},
																		"nativeSrc": "5485:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:6",
														"nodeType": "YulTypedName",
														"src": "5126:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:6",
														"nodeType": "YulTypedName",
														"src": "5137:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:6",
														"nodeType": "YulTypedName",
														"src": "5149:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:6",
														"nodeType": "YulTypedName",
														"src": "5157:6:6",
														"type": ""
													}
												],
												"src": "5081:474:6"
											},
											{
												"body": {
													"nativeSrc": "5589:152:6",
													"nodeType": "YulBlock",
													"src": "5589:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nativeSrc": "5599:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:6"
															},
															"nativeSrc": "5599:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:6"
																},
																"nativeSrc": "5696:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:6"
															},
															"nativeSrc": "5696:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:6"
																},
																"nativeSrc": "5720:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:6"
															},
															"nativeSrc": "5720:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:6"
											},
											{
												"body": {
													"nativeSrc": "5798:269:6",
													"nodeType": "YulBlock",
													"src": "5798:269:6",
													"statements": [
														{
															"nativeSrc": "5808:22:6",
															"nodeType": "YulAssignment",
															"src": "5808:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:6"
																},
																"nativeSrc": "5818:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:6"
																}
															]
														},
														{
															"nativeSrc": "5839:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:6"
																},
																"nativeSrc": "5865:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:6",
																"nodeType": "YulBlock",
																"src": "5916:51:6",
																"statements": [
																	{
																		"nativeSrc": "5930:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:6"
																			},
																			"nativeSrc": "5940:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:6"
																},
																"nativeSrc": "5889:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:6"
															},
															"nativeSrc": "5886:81:6",
															"nodeType": "YulIf",
															"src": "5886:81:6"
														},
														{
															"body": {
																"nativeSrc": "6019:42:6",
																"nodeType": "YulBlock",
																"src": "6019:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:6"
																			},
																			"nativeSrc": "6033:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:6"
																		},
																		"nativeSrc": "6033:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:6"
																		},
																		"nativeSrc": "6003:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:6"
																},
																"nativeSrc": "5980:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:6"
															},
															"nativeSrc": "5977:84:6",
															"nodeType": "YulIf",
															"src": "5977:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:6",
														"nodeType": "YulTypedName",
														"src": "5782:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:6",
														"nodeType": "YulTypedName",
														"src": "5791:6:6",
														"type": ""
													}
												],
												"src": "5747:320:6"
											},
											{
												"body": {
													"nativeSrc": "6179:118:6",
													"nodeType": "YulBlock",
													"src": "6179:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6201:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6201:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6209:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6209:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6197:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:6"
																		},
																		"nativeSrc": "6197:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6197:14:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "6213:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6213:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:6"
																},
																"nativeSrc": "6190:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6190:58:6"
															},
															"nativeSrc": "6190:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6190:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6269:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6269:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6277:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6277:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6265:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6265:3:6"
																		},
																		"nativeSrc": "6265:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6265:15:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "6282:7:6",
																		"nodeType": "YulLiteral",
																		"src": "6282:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6258:6:6"
																},
																"nativeSrc": "6258:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6258:32:6"
															},
															"nativeSrc": "6258:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "6258:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nativeSrc": "6073:224:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6171:6:6",
														"nodeType": "YulTypedName",
														"src": "6171:6:6",
														"type": ""
													}
												],
												"src": "6073:224:6"
											},
											{
												"body": {
													"nativeSrc": "6449:220:6",
													"nodeType": "YulBlock",
													"src": "6449:220:6",
													"statements": [
														{
															"nativeSrc": "6459:74:6",
															"nodeType": "YulAssignment",
															"src": "6459:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6525:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6525:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6530:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6530:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6466:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6466:58:6"
																},
																"nativeSrc": "6466:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6466:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6459:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6459:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6631:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6631:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nativeSrc": "6542:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6542:88:6"
																},
																"nativeSrc": "6542:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6542:93:6"
															},
															"nativeSrc": "6542:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6542:93:6"
														},
														{
															"nativeSrc": "6644:19:6",
															"nodeType": "YulAssignment",
															"src": "6644:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6655:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6655:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6660:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6651:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6651:3:6"
																},
																"nativeSrc": "6651:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6651:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6644:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6644:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6303:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6437:3:6",
														"nodeType": "YulTypedName",
														"src": "6437:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6445:3:6",
														"nodeType": "YulTypedName",
														"src": "6445:3:6",
														"type": ""
													}
												],
												"src": "6303:366:6"
											},
											{
												"body": {
													"nativeSrc": "6846:248:6",
													"nodeType": "YulBlock",
													"src": "6846:248:6",
													"statements": [
														{
															"nativeSrc": "6856:26:6",
															"nodeType": "YulAssignment",
															"src": "6856:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6868:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6868:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6879:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6879:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6864:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6864:3:6"
																},
																"nativeSrc": "6864:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6864:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6856:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6856:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6903:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6903:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6914:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6914:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6899:3:6"
																		},
																		"nativeSrc": "6899:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6899:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6922:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6922:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6918:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6918:3:6"
																		},
																		"nativeSrc": "6918:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6918:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6892:6:6"
																},
																"nativeSrc": "6892:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6892:47:6"
															},
															"nativeSrc": "6892:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6892:47:6"
														},
														{
															"nativeSrc": "6948:139:6",
															"nodeType": "YulAssignment",
															"src": "6948:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7082:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7082:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6956:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6956:124:6"
																},
																"nativeSrc": "6956:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6956:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6948:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6948:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6675:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6826:9:6",
														"nodeType": "YulTypedName",
														"src": "6826:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6841:4:6",
														"nodeType": "YulTypedName",
														"src": "6841:4:6",
														"type": ""
													}
												],
												"src": "6675:419:6"
											},
											{
												"body": {
													"nativeSrc": "7206:117:6",
													"nodeType": "YulBlock",
													"src": "7206:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7228:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7228:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7236:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7236:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7224:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:6"
																		},
																		"nativeSrc": "7224:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7224:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "7240:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7240:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7217:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:6"
																},
																"nativeSrc": "7217:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7217:58:6"
															},
															"nativeSrc": "7217:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7217:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7296:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7296:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7304:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7304:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7292:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7292:3:6"
																		},
																		"nativeSrc": "7292:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7292:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "7309:6:6",
																		"nodeType": "YulLiteral",
																		"src": "7309:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7285:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7285:6:6"
																},
																"nativeSrc": "7285:31:6",
																"nodeType": "YulFunctionCall",
																"src": "7285:31:6"
															},
															"nativeSrc": "7285:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "7285:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nativeSrc": "7100:223:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7198:6:6",
														"nodeType": "YulTypedName",
														"src": "7198:6:6",
														"type": ""
													}
												],
												"src": "7100:223:6"
											},
											{
												"body": {
													"nativeSrc": "7475:220:6",
													"nodeType": "YulBlock",
													"src": "7475:220:6",
													"statements": [
														{
															"nativeSrc": "7485:74:6",
															"nodeType": "YulAssignment",
															"src": "7485:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7551:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7556:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7556:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7492:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7492:58:6"
																},
																"nativeSrc": "7492:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7492:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7485:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7485:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7657:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7657:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nativeSrc": "7568:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7568:88:6"
																},
																"nativeSrc": "7568:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7568:93:6"
															},
															"nativeSrc": "7568:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7568:93:6"
														},
														{
															"nativeSrc": "7670:19:6",
															"nodeType": "YulAssignment",
															"src": "7670:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7681:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7681:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7686:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7686:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7677:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7677:3:6"
																},
																"nativeSrc": "7677:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7677:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7670:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7670:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7329:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7463:3:6",
														"nodeType": "YulTypedName",
														"src": "7463:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7471:3:6",
														"nodeType": "YulTypedName",
														"src": "7471:3:6",
														"type": ""
													}
												],
												"src": "7329:366:6"
											},
											{
												"body": {
													"nativeSrc": "7872:248:6",
													"nodeType": "YulBlock",
													"src": "7872:248:6",
													"statements": [
														{
															"nativeSrc": "7882:26:6",
															"nodeType": "YulAssignment",
															"src": "7882:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7894:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7894:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7905:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7905:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7890:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7890:3:6"
																},
																"nativeSrc": "7890:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7890:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7882:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7882:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7929:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7929:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7940:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7940:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7925:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7925:3:6"
																		},
																		"nativeSrc": "7925:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7925:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7948:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7948:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7954:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7954:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7944:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:6"
																		},
																		"nativeSrc": "7944:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7944:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7918:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7918:6:6"
																},
																"nativeSrc": "7918:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7918:47:6"
															},
															"nativeSrc": "7918:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7918:47:6"
														},
														{
															"nativeSrc": "7974:139:6",
															"nodeType": "YulAssignment",
															"src": "7974:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8108:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8108:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7982:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7982:124:6"
																},
																"nativeSrc": "7982:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7982:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7974:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7974:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7701:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7852:9:6",
														"nodeType": "YulTypedName",
														"src": "7852:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7867:4:6",
														"nodeType": "YulTypedName",
														"src": "7867:4:6",
														"type": ""
													}
												],
												"src": "7701:419:6"
											},
											{
												"body": {
													"nativeSrc": "8232:115:6",
													"nodeType": "YulBlock",
													"src": "8232:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8254:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8254:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8262:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8262:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8250:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:6"
																		},
																		"nativeSrc": "8250:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8250:14:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "8266:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8266:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8243:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8243:6:6"
																},
																"nativeSrc": "8243:58:6",
																"nodeType": "YulFunctionCall",
																"src": "8243:58:6"
															},
															"nativeSrc": "8243:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "8243:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8322:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8322:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8330:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8330:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8318:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:6"
																		},
																		"nativeSrc": "8318:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "8335:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8335:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8311:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8311:6:6"
																},
																"nativeSrc": "8311:29:6",
																"nodeType": "YulFunctionCall",
																"src": "8311:29:6"
															},
															"nativeSrc": "8311:29:6",
															"nodeType": "YulExpressionStatement",
															"src": "8311:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nativeSrc": "8126:221:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8224:6:6",
														"nodeType": "YulTypedName",
														"src": "8224:6:6",
														"type": ""
													}
												],
												"src": "8126:221:6"
											},
											{
												"body": {
													"nativeSrc": "8499:220:6",
													"nodeType": "YulBlock",
													"src": "8499:220:6",
													"statements": [
														{
															"nativeSrc": "8509:74:6",
															"nodeType": "YulAssignment",
															"src": "8509:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8575:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8575:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8516:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8516:58:6"
																},
																"nativeSrc": "8516:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8516:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8509:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8681:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8681:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nativeSrc": "8592:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8592:88:6"
																},
																"nativeSrc": "8592:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8592:93:6"
															},
															"nativeSrc": "8592:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8592:93:6"
														},
														{
															"nativeSrc": "8694:19:6",
															"nodeType": "YulAssignment",
															"src": "8694:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8705:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8705:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8710:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8710:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8701:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8701:3:6"
																},
																"nativeSrc": "8701:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8701:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8694:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8694:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8353:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8487:3:6",
														"nodeType": "YulTypedName",
														"src": "8487:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8495:3:6",
														"nodeType": "YulTypedName",
														"src": "8495:3:6",
														"type": ""
													}
												],
												"src": "8353:366:6"
											},
											{
												"body": {
													"nativeSrc": "8896:248:6",
													"nodeType": "YulBlock",
													"src": "8896:248:6",
													"statements": [
														{
															"nativeSrc": "8906:26:6",
															"nodeType": "YulAssignment",
															"src": "8906:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8918:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8918:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8929:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8929:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8914:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8914:3:6"
																},
																"nativeSrc": "8914:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8914:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8906:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8953:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8953:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8964:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8964:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8949:3:6"
																		},
																		"nativeSrc": "8949:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8949:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8972:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8972:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8978:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8978:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8968:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:6"
																		},
																		"nativeSrc": "8968:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8942:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8942:6:6"
																},
																"nativeSrc": "8942:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8942:47:6"
															},
															"nativeSrc": "8942:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8942:47:6"
														},
														{
															"nativeSrc": "8998:139:6",
															"nodeType": "YulAssignment",
															"src": "8998:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9132:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9132:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9006:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9006:124:6"
																},
																"nativeSrc": "9006:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9006:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8998:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8998:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8725:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8876:9:6",
														"nodeType": "YulTypedName",
														"src": "8876:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8891:4:6",
														"nodeType": "YulTypedName",
														"src": "8891:4:6",
														"type": ""
													}
												],
												"src": "8725:419:6"
											},
											{
												"body": {
													"nativeSrc": "9256:73:6",
													"nodeType": "YulBlock",
													"src": "9256:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9278:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9278:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9286:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9286:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9274:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:6"
																		},
																		"nativeSrc": "9274:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:14:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "9290:31:6",
																		"nodeType": "YulLiteral",
																		"src": "9290:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9267:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:6"
																},
																"nativeSrc": "9267:55:6",
																"nodeType": "YulFunctionCall",
																"src": "9267:55:6"
															},
															"nativeSrc": "9267:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "9267:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nativeSrc": "9150:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9248:6:6",
														"nodeType": "YulTypedName",
														"src": "9248:6:6",
														"type": ""
													}
												],
												"src": "9150:179:6"
											},
											{
												"body": {
													"nativeSrc": "9481:220:6",
													"nodeType": "YulBlock",
													"src": "9481:220:6",
													"statements": [
														{
															"nativeSrc": "9491:74:6",
															"nodeType": "YulAssignment",
															"src": "9491:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9557:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9557:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9562:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9562:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9498:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9498:58:6"
																},
																"nativeSrc": "9498:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9498:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9491:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9491:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9663:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9663:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nativeSrc": "9574:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9574:88:6"
																},
																"nativeSrc": "9574:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9574:93:6"
															},
															"nativeSrc": "9574:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9574:93:6"
														},
														{
															"nativeSrc": "9676:19:6",
															"nodeType": "YulAssignment",
															"src": "9676:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9687:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9687:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9692:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9692:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9683:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9683:3:6"
																},
																"nativeSrc": "9683:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9683:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9676:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9676:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9335:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9469:3:6",
														"nodeType": "YulTypedName",
														"src": "9469:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9477:3:6",
														"nodeType": "YulTypedName",
														"src": "9477:3:6",
														"type": ""
													}
												],
												"src": "9335:366:6"
											},
											{
												"body": {
													"nativeSrc": "9878:248:6",
													"nodeType": "YulBlock",
													"src": "9878:248:6",
													"statements": [
														{
															"nativeSrc": "9888:26:6",
															"nodeType": "YulAssignment",
															"src": "9888:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9900:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9900:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9911:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9911:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9896:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9896:3:6"
																},
																"nativeSrc": "9896:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9896:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9888:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9888:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9935:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9935:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9946:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9946:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9931:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9931:3:6"
																		},
																		"nativeSrc": "9931:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9931:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9954:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9954:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9960:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9960:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9950:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:6"
																		},
																		"nativeSrc": "9950:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9950:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9924:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:6"
																},
																"nativeSrc": "9924:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9924:47:6"
															},
															"nativeSrc": "9924:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9924:47:6"
														},
														{
															"nativeSrc": "9980:139:6",
															"nodeType": "YulAssignment",
															"src": "9980:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10114:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10114:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9988:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9988:124:6"
																},
																"nativeSrc": "9988:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9988:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9980:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9980:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9707:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9858:9:6",
														"nodeType": "YulTypedName",
														"src": "9858:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9873:4:6",
														"nodeType": "YulTypedName",
														"src": "9873:4:6",
														"type": ""
													}
												],
												"src": "9707:419:6"
											},
											{
												"body": {
													"nativeSrc": "10238:118:6",
													"nodeType": "YulBlock",
													"src": "10238:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10260:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10260:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10268:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10268:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10256:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10256:3:6"
																		},
																		"nativeSrc": "10256:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10256:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "10272:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10272:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10249:6:6"
																},
																"nativeSrc": "10249:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10249:58:6"
															},
															"nativeSrc": "10249:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10249:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10328:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10328:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10336:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10336:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10324:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10324:3:6"
																		},
																		"nativeSrc": "10324:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10324:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "10341:7:6",
																		"nodeType": "YulLiteral",
																		"src": "10341:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10317:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:6"
																},
																"nativeSrc": "10317:32:6",
																"nodeType": "YulFunctionCall",
																"src": "10317:32:6"
															},
															"nativeSrc": "10317:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "10317:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nativeSrc": "10132:224:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10230:6:6",
														"nodeType": "YulTypedName",
														"src": "10230:6:6",
														"type": ""
													}
												],
												"src": "10132:224:6"
											},
											{
												"body": {
													"nativeSrc": "10508:220:6",
													"nodeType": "YulBlock",
													"src": "10508:220:6",
													"statements": [
														{
															"nativeSrc": "10518:74:6",
															"nodeType": "YulAssignment",
															"src": "10518:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10584:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10584:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10589:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10589:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10525:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10525:58:6"
																},
																"nativeSrc": "10525:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10525:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10518:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10690:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10690:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nativeSrc": "10601:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10601:88:6"
																},
																"nativeSrc": "10601:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10601:93:6"
															},
															"nativeSrc": "10601:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10601:93:6"
														},
														{
															"nativeSrc": "10703:19:6",
															"nodeType": "YulAssignment",
															"src": "10703:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10714:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10714:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10719:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10719:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10710:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10710:3:6"
																},
																"nativeSrc": "10710:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10710:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10703:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10362:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10496:3:6",
														"nodeType": "YulTypedName",
														"src": "10496:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10504:3:6",
														"nodeType": "YulTypedName",
														"src": "10504:3:6",
														"type": ""
													}
												],
												"src": "10362:366:6"
											},
											{
												"body": {
													"nativeSrc": "10905:248:6",
													"nodeType": "YulBlock",
													"src": "10905:248:6",
													"statements": [
														{
															"nativeSrc": "10915:26:6",
															"nodeType": "YulAssignment",
															"src": "10915:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10927:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10927:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10938:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10938:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10923:3:6"
																},
																"nativeSrc": "10923:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10923:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10915:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10915:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10962:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10962:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10973:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10973:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10958:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10958:3:6"
																		},
																		"nativeSrc": "10958:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10958:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10981:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10981:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10987:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10987:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10977:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10977:3:6"
																		},
																		"nativeSrc": "10977:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10977:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10951:6:6"
																},
																"nativeSrc": "10951:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10951:47:6"
															},
															"nativeSrc": "10951:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10951:47:6"
														},
														{
															"nativeSrc": "11007:139:6",
															"nodeType": "YulAssignment",
															"src": "11007:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11141:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11141:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11015:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11015:124:6"
																},
																"nativeSrc": "11015:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11015:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11007:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11007:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10734:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10885:9:6",
														"nodeType": "YulTypedName",
														"src": "10885:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10900:4:6",
														"nodeType": "YulTypedName",
														"src": "10900:4:6",
														"type": ""
													}
												],
												"src": "10734:419:6"
											},
											{
												"body": {
													"nativeSrc": "11265:116:6",
													"nodeType": "YulBlock",
													"src": "11265:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11287:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11287:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11295:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11295:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11283:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:6"
																		},
																		"nativeSrc": "11283:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11283:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "11299:34:6",
																		"nodeType": "YulLiteral",
																		"src": "11299:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11276:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:6"
																},
																"nativeSrc": "11276:58:6",
																"nodeType": "YulFunctionCall",
																"src": "11276:58:6"
															},
															"nativeSrc": "11276:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "11276:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11355:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11355:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11363:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11363:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11351:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11351:3:6"
																		},
																		"nativeSrc": "11351:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11351:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "11368:5:6",
																		"nodeType": "YulLiteral",
																		"src": "11368:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11344:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11344:6:6"
																},
																"nativeSrc": "11344:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11344:30:6"
															},
															"nativeSrc": "11344:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11344:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nativeSrc": "11159:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11257:6:6",
														"nodeType": "YulTypedName",
														"src": "11257:6:6",
														"type": ""
													}
												],
												"src": "11159:222:6"
											},
											{
												"body": {
													"nativeSrc": "11533:220:6",
													"nodeType": "YulBlock",
													"src": "11533:220:6",
													"statements": [
														{
															"nativeSrc": "11543:74:6",
															"nodeType": "YulAssignment",
															"src": "11543:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11609:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11609:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11614:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11614:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11550:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11550:58:6"
																},
																"nativeSrc": "11550:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11550:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11543:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11543:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11715:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11715:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nativeSrc": "11626:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11626:88:6"
																},
																"nativeSrc": "11626:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11626:93:6"
															},
															"nativeSrc": "11626:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11626:93:6"
														},
														{
															"nativeSrc": "11728:19:6",
															"nodeType": "YulAssignment",
															"src": "11728:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11739:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11739:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11744:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11735:3:6"
																},
																"nativeSrc": "11735:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11735:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11728:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11387:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11521:3:6",
														"nodeType": "YulTypedName",
														"src": "11521:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11529:3:6",
														"nodeType": "YulTypedName",
														"src": "11529:3:6",
														"type": ""
													}
												],
												"src": "11387:366:6"
											},
											{
												"body": {
													"nativeSrc": "11930:248:6",
													"nodeType": "YulBlock",
													"src": "11930:248:6",
													"statements": [
														{
															"nativeSrc": "11940:26:6",
															"nodeType": "YulAssignment",
															"src": "11940:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11952:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11952:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11963:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11963:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11948:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:6"
																},
																"nativeSrc": "11948:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11948:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11940:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11940:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11987:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11987:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11998:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11998:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11983:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11983:3:6"
																		},
																		"nativeSrc": "11983:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11983:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12006:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12006:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12012:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12012:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12002:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:6"
																		},
																		"nativeSrc": "12002:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12002:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11976:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11976:6:6"
																},
																"nativeSrc": "11976:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11976:47:6"
															},
															"nativeSrc": "11976:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11976:47:6"
														},
														{
															"nativeSrc": "12032:139:6",
															"nodeType": "YulAssignment",
															"src": "12032:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12166:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12166:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12040:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12040:124:6"
																},
																"nativeSrc": "12040:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12040:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12032:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12032:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11759:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11910:9:6",
														"nodeType": "YulTypedName",
														"src": "11910:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11925:4:6",
														"nodeType": "YulTypedName",
														"src": "11925:4:6",
														"type": ""
													}
												],
												"src": "11759:419:6"
											},
											{
												"body": {
													"nativeSrc": "12290:119:6",
													"nodeType": "YulBlock",
													"src": "12290:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12312:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12312:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12320:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12320:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12308:3:6"
																		},
																		"nativeSrc": "12308:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12308:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "12324:34:6",
																		"nodeType": "YulLiteral",
																		"src": "12324:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12301:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12301:6:6"
																},
																"nativeSrc": "12301:58:6",
																"nodeType": "YulFunctionCall",
																"src": "12301:58:6"
															},
															"nativeSrc": "12301:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "12301:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12380:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12380:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12388:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12388:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12376:3:6"
																		},
																		"nativeSrc": "12376:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12376:15:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12393:8:6",
																		"nodeType": "YulLiteral",
																		"src": "12393:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12369:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12369:6:6"
																},
																"nativeSrc": "12369:33:6",
																"nodeType": "YulFunctionCall",
																"src": "12369:33:6"
															},
															"nativeSrc": "12369:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "12369:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nativeSrc": "12184:225:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12282:6:6",
														"nodeType": "YulTypedName",
														"src": "12282:6:6",
														"type": ""
													}
												],
												"src": "12184:225:6"
											},
											{
												"body": {
													"nativeSrc": "12561:220:6",
													"nodeType": "YulBlock",
													"src": "12561:220:6",
													"statements": [
														{
															"nativeSrc": "12571:74:6",
															"nodeType": "YulAssignment",
															"src": "12571:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12637:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12637:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12642:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12642:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12578:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12578:58:6"
																},
																"nativeSrc": "12578:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12578:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12571:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12743:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12743:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nativeSrc": "12654:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12654:88:6"
																},
																"nativeSrc": "12654:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12654:93:6"
															},
															"nativeSrc": "12654:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12654:93:6"
														},
														{
															"nativeSrc": "12756:19:6",
															"nodeType": "YulAssignment",
															"src": "12756:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12767:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12767:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12772:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12772:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12763:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12763:3:6"
																},
																"nativeSrc": "12763:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12763:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12756:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12756:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12415:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12549:3:6",
														"nodeType": "YulTypedName",
														"src": "12549:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12557:3:6",
														"nodeType": "YulTypedName",
														"src": "12557:3:6",
														"type": ""
													}
												],
												"src": "12415:366:6"
											},
											{
												"body": {
													"nativeSrc": "12958:248:6",
													"nodeType": "YulBlock",
													"src": "12958:248:6",
													"statements": [
														{
															"nativeSrc": "12968:26:6",
															"nodeType": "YulAssignment",
															"src": "12968:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12980:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12980:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12991:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12991:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12976:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12976:3:6"
																},
																"nativeSrc": "12976:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12976:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12968:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12968:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13015:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13015:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13026:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13026:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13011:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13011:3:6"
																		},
																		"nativeSrc": "13011:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13011:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13034:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13034:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13040:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13040:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13030:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13030:3:6"
																		},
																		"nativeSrc": "13030:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13030:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13004:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13004:6:6"
																},
																"nativeSrc": "13004:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13004:47:6"
															},
															"nativeSrc": "13004:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13004:47:6"
														},
														{
															"nativeSrc": "13060:139:6",
															"nodeType": "YulAssignment",
															"src": "13060:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13194:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13194:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13068:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13068:124:6"
																},
																"nativeSrc": "13068:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13068:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13060:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13060:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12787:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12938:9:6",
														"nodeType": "YulTypedName",
														"src": "12938:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12953:4:6",
														"nodeType": "YulTypedName",
														"src": "12953:4:6",
														"type": ""
													}
												],
												"src": "12787:419:6"
											},
											{
												"body": {
													"nativeSrc": "13240:152:6",
													"nodeType": "YulBlock",
													"src": "13240:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13257:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13257:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13260:77:6",
																		"nodeType": "YulLiteral",
																		"src": "13260:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13250:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13250:6:6"
																},
																"nativeSrc": "13250:88:6",
																"nodeType": "YulFunctionCall",
																"src": "13250:88:6"
															},
															"nativeSrc": "13250:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "13250:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13354:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13354:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13357:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13357:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13347:6:6"
																},
																"nativeSrc": "13347:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13347:15:6"
															},
															"nativeSrc": "13347:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13347:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13378:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13378:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13381:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13381:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13371:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13371:6:6"
																},
																"nativeSrc": "13371:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13371:15:6"
															},
															"nativeSrc": "13371:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13371:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13212:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "13212:180:6"
											},
											{
												"body": {
													"nativeSrc": "13442:147:6",
													"nodeType": "YulBlock",
													"src": "13442:147:6",
													"statements": [
														{
															"nativeSrc": "13452:25:6",
															"nodeType": "YulAssignment",
															"src": "13452:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13475:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13475:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13457:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13457:17:6"
																},
																"nativeSrc": "13457:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13457:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13452:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13452:1:6"
																}
															]
														},
														{
															"nativeSrc": "13486:25:6",
															"nodeType": "YulAssignment",
															"src": "13486:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13509:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13509:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13491:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13491:17:6"
																},
																"nativeSrc": "13491:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13491:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13486:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13486:1:6"
																}
															]
														},
														{
															"nativeSrc": "13520:16:6",
															"nodeType": "YulAssignment",
															"src": "13520:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13531:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13531:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13534:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13534:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13527:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13527:3:6"
																},
																"nativeSrc": "13527:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13527:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13520:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13520:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13560:22:6",
																"nodeType": "YulBlock",
																"src": "13560:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13562:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13562:16:6"
																			},
																			"nativeSrc": "13562:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13562:18:6"
																		},
																		"nativeSrc": "13562:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13562:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13552:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13552:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13555:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13555:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13549:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13549:2:6"
																},
																"nativeSrc": "13549:10:6",
																"nodeType": "YulFunctionCall",
																"src": "13549:10:6"
															},
															"nativeSrc": "13546:36:6",
															"nodeType": "YulIf",
															"src": "13546:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13398:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13429:1:6",
														"nodeType": "YulTypedName",
														"src": "13429:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13432:1:6",
														"nodeType": "YulTypedName",
														"src": "13432:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13438:3:6",
														"nodeType": "YulTypedName",
														"src": "13438:3:6",
														"type": ""
													}
												],
												"src": "13398:191:6"
											},
											{
												"body": {
													"nativeSrc": "13701:71:6",
													"nodeType": "YulBlock",
													"src": "13701:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13723:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13723:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13731:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13731:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13719:3:6"
																		},
																		"nativeSrc": "13719:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13719:14:6"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "13735:29:6",
																		"nodeType": "YulLiteral",
																		"src": "13735:29:6",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13712:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:6"
																},
																"nativeSrc": "13712:53:6",
																"nodeType": "YulFunctionCall",
																"src": "13712:53:6"
															},
															"nativeSrc": "13712:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "13712:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nativeSrc": "13595:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13693:6:6",
														"nodeType": "YulTypedName",
														"src": "13693:6:6",
														"type": ""
													}
												],
												"src": "13595:177:6"
											},
											{
												"body": {
													"nativeSrc": "13924:220:6",
													"nodeType": "YulBlock",
													"src": "13924:220:6",
													"statements": [
														{
															"nativeSrc": "13934:74:6",
															"nodeType": "YulAssignment",
															"src": "13934:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14000:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14000:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14005:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14005:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13941:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13941:58:6"
																},
																"nativeSrc": "13941:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13941:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13934:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13934:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14106:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14106:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nativeSrc": "14017:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14017:88:6"
																},
																"nativeSrc": "14017:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14017:93:6"
															},
															"nativeSrc": "14017:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14017:93:6"
														},
														{
															"nativeSrc": "14119:19:6",
															"nodeType": "YulAssignment",
															"src": "14119:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14130:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14130:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14135:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14135:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14126:3:6"
																},
																"nativeSrc": "14126:12:6",
																"nodeType": "YulFunctionCall",
																"src": "14126:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14119:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14119:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13778:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13912:3:6",
														"nodeType": "YulTypedName",
														"src": "13912:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13920:3:6",
														"nodeType": "YulTypedName",
														"src": "13920:3:6",
														"type": ""
													}
												],
												"src": "13778:366:6"
											},
											{
												"body": {
													"nativeSrc": "14321:248:6",
													"nodeType": "YulBlock",
													"src": "14321:248:6",
													"statements": [
														{
															"nativeSrc": "14331:26:6",
															"nodeType": "YulAssignment",
															"src": "14331:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14343:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14343:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14354:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14354:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14339:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14339:3:6"
																},
																"nativeSrc": "14339:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14339:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14331:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14331:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14378:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14378:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14389:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14389:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14374:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14374:3:6"
																		},
																		"nativeSrc": "14374:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14374:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14397:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14397:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14403:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14403:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14393:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14393:3:6"
																		},
																		"nativeSrc": "14393:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14393:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14367:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14367:6:6"
																},
																"nativeSrc": "14367:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14367:47:6"
															},
															"nativeSrc": "14367:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14367:47:6"
														},
														{
															"nativeSrc": "14423:139:6",
															"nodeType": "YulAssignment",
															"src": "14423:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14557:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14557:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14431:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "14431:124:6"
																},
																"nativeSrc": "14431:131:6",
																"nodeType": "YulFunctionCall",
																"src": "14431:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14423:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14423:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14150:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14301:9:6",
														"nodeType": "YulTypedName",
														"src": "14301:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14316:4:6",
														"nodeType": "YulTypedName",
														"src": "14316:4:6",
														"type": ""
													}
												],
												"src": "14150:419:6"
											},
											{
												"body": {
													"nativeSrc": "14681:74:6",
													"nodeType": "YulBlock",
													"src": "14681:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14703:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14703:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14711:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14711:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14699:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14699:3:6"
																		},
																		"nativeSrc": "14699:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14699:14:6"
																	},
																	{
																		"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "14715:32:6",
																		"nodeType": "YulLiteral",
																		"src": "14715:32:6",
																		"type": "",
																		"value": "SafeMath: subtraction overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14692:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14692:6:6"
																},
																"nativeSrc": "14692:56:6",
																"nodeType": "YulFunctionCall",
																"src": "14692:56:6"
															},
															"nativeSrc": "14692:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "14692:56:6"
														}
													]
												},
												"name": "store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
												"nativeSrc": "14575:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14673:6:6",
														"nodeType": "YulTypedName",
														"src": "14673:6:6",
														"type": ""
													}
												],
												"src": "14575:180:6"
											},
											{
												"body": {
													"nativeSrc": "14907:220:6",
													"nodeType": "YulBlock",
													"src": "14907:220:6",
													"statements": [
														{
															"nativeSrc": "14917:74:6",
															"nodeType": "YulAssignment",
															"src": "14917:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14983:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14988:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14924:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "14924:58:6"
																},
																"nativeSrc": "14924:67:6",
																"nodeType": "YulFunctionCall",
																"src": "14924:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14917:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15089:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15089:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																	"nativeSrc": "15000:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15000:88:6"
																},
																"nativeSrc": "15000:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15000:93:6"
															},
															"nativeSrc": "15000:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15000:93:6"
														},
														{
															"nativeSrc": "15102:19:6",
															"nodeType": "YulAssignment",
															"src": "15102:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15113:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15113:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15109:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15109:3:6"
																},
																"nativeSrc": "15109:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15109:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15102:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15102:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14761:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14895:3:6",
														"nodeType": "YulTypedName",
														"src": "14895:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14903:3:6",
														"nodeType": "YulTypedName",
														"src": "14903:3:6",
														"type": ""
													}
												],
												"src": "14761:366:6"
											},
											{
												"body": {
													"nativeSrc": "15304:248:6",
													"nodeType": "YulBlock",
													"src": "15304:248:6",
													"statements": [
														{
															"nativeSrc": "15314:26:6",
															"nodeType": "YulAssignment",
															"src": "15314:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15326:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15326:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15337:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15337:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15322:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15322:3:6"
																},
																"nativeSrc": "15322:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15322:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15314:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15314:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15372:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15372:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15357:3:6"
																		},
																		"nativeSrc": "15357:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15357:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15380:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15380:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15386:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15386:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15376:3:6"
																		},
																		"nativeSrc": "15376:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15376:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15350:6:6"
																},
																"nativeSrc": "15350:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15350:47:6"
															},
															"nativeSrc": "15350:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15350:47:6"
														},
														{
															"nativeSrc": "15406:139:6",
															"nodeType": "YulAssignment",
															"src": "15406:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15540:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15540:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15414:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15414:124:6"
																},
																"nativeSrc": "15414:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15414:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15406:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15406:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15133:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15284:9:6",
														"nodeType": "YulTypedName",
														"src": "15284:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15299:4:6",
														"nodeType": "YulTypedName",
														"src": "15299:4:6",
														"type": ""
													}
												],
												"src": "15133:419:6"
											},
											{
												"body": {
													"nativeSrc": "15603:149:6",
													"nodeType": "YulBlock",
													"src": "15603:149:6",
													"statements": [
														{
															"nativeSrc": "15613:25:6",
															"nodeType": "YulAssignment",
															"src": "15613:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15636:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15636:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15618:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "15618:17:6"
																},
																"nativeSrc": "15618:20:6",
																"nodeType": "YulFunctionCall",
																"src": "15618:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15613:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "15613:1:6"
																}
															]
														},
														{
															"nativeSrc": "15647:25:6",
															"nodeType": "YulAssignment",
															"src": "15647:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15670:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15670:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15652:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "15652:17:6"
																},
																"nativeSrc": "15652:20:6",
																"nodeType": "YulFunctionCall",
																"src": "15652:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15647:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "15647:1:6"
																}
															]
														},
														{
															"nativeSrc": "15681:17:6",
															"nodeType": "YulAssignment",
															"src": "15681:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15693:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15693:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15696:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15696:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15689:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15689:3:6"
																},
																"nativeSrc": "15689:9:6",
																"nodeType": "YulFunctionCall",
																"src": "15689:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15681:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15681:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15723:22:6",
																"nodeType": "YulBlock",
																"src": "15723:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15725:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "15725:16:6"
																			},
																			"nativeSrc": "15725:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15725:18:6"
																		},
																		"nativeSrc": "15725:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "15725:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15714:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15714:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15720:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "15720:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15711:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "15711:2:6"
																},
																"nativeSrc": "15711:11:6",
																"nodeType": "YulFunctionCall",
																"src": "15711:11:6"
															},
															"nativeSrc": "15708:37:6",
															"nodeType": "YulIf",
															"src": "15708:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15558:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15589:1:6",
														"nodeType": "YulTypedName",
														"src": "15589:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15592:1:6",
														"nodeType": "YulTypedName",
														"src": "15592:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15598:4:6",
														"nodeType": "YulTypedName",
														"src": "15598:4:6",
														"type": ""
													}
												],
												"src": "15558:194:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: subtraction overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c8063395093511161006f578063395093511461016557806370a082311461019557806395d89b41146101c5578063a457c2d7146101e3578063a9059cbb14610213578063dd62ed3e14610243576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f5ffd5b6100b3610273565b6040516100c09190610bc8565b60405180910390f35b6100e360048036038101906100de9190610c79565b610303565b6040516100f09190610cd1565b60405180910390f35b610101610325565b60405161010e9190610cf9565b60405180910390f35b610131600480360381019061012c9190610d12565b61032e565b60405161013e9190610cd1565b60405180910390f35b61014f61035c565b60405161015c9190610d7d565b60405180910390f35b61017f600480360381019061017a9190610c79565b610364565b60405161018c9190610cd1565b60405180910390f35b6101af60048036038101906101aa9190610d96565b610398565b6040516101bc9190610cf9565b60405180910390f35b6101cd6103dd565b6040516101da9190610bc8565b60405180910390f35b6101fd60048036038101906101f89190610c79565b61046d565b60405161020a9190610cd1565b60405180910390f35b61022d60048036038101906102289190610c79565b6104e9565b60405161023a9190610cd1565b60405180910390f35b61025d60048036038101906102589190610dc1565b61050b565b60405161026a9190610cf9565b60405180910390f35b60606003805461028290610e2c565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610e2c565b80156102f95780601f106102d0576101008083540402835291602001916102f9565b820191905f5260205f20905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b5f5f61030d61058d565b905061031a818585610594565b600191505092915050565b5f600254905090565b5f5f61033861058d565b9050610345858285610757565b6103508585856107e9565b60019150509392505050565b5f6012905090565b5f5f61036e61058d565b905061038d8185610388610382858961050b565b87610a99565b610594565b600191505092915050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ec90610e2c565b80601f016020809104026020016040519081016040528092919081815260200182805461041890610e2c565b80156104635780601f1061043a57610100808354040283529160200191610463565b820191905f5260205f20905b81548152906001019060200180831161044657829003601f168201915b5050505050905090565b5f5f61047761058d565b90505f610484828661050b565b9050838110156104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610ecc565b60405180910390fd5b6104dd82866104d88488610af6565b610594565b60019250505092915050565b5f5f6104f361058d565b90506105008185856107e9565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990610f5a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790610fe8565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161074a9190610cf9565b60405180910390a3505050565b5f610762848461050b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107e357818110156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590611050565b60405180910390fd5b6107e284846107dd8486610af6565b610594565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084e906110de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bc9061116c565b60405180910390fd5b6108d0838383610b4e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a906111fa565b60405180910390fd5b61095d8183610af6565b5f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109e35f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483610a99565b5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a809190610cf9565b60405180910390a3610a93848484610b53565b50505050565b5f5f8284610aa79190611245565b905083811015610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae3906112c2565b60405180910390fd5b8091505092915050565b5f82821115610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b319061132a565b60405180910390fd5b8183610b469190611348565b905092915050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b9a82610b58565b610ba48185610b62565b9350610bb4818560208601610b72565b610bbd81610b80565b840191505092915050565b5f6020820190508181035f830152610be08184610b90565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1582610bec565b9050919050565b610c2581610c0b565b8114610c2f575f5ffd5b50565b5f81359050610c4081610c1c565b92915050565b5f819050919050565b610c5881610c46565b8114610c62575f5ffd5b50565b5f81359050610c7381610c4f565b92915050565b5f5f60408385031215610c8f57610c8e610be8565b5b5f610c9c85828601610c32565b9250506020610cad85828601610c65565b9150509250929050565b5f8115159050919050565b610ccb81610cb7565b82525050565b5f602082019050610ce45f830184610cc2565b92915050565b610cf381610c46565b82525050565b5f602082019050610d0c5f830184610cea565b92915050565b5f5f5f60608486031215610d2957610d28610be8565b5b5f610d3686828701610c32565b9350506020610d4786828701610c32565b9250506040610d5886828701610c65565b9150509250925092565b5f60ff82169050919050565b610d7781610d62565b82525050565b5f602082019050610d905f830184610d6e565b92915050565b5f60208284031215610dab57610daa610be8565b5b5f610db884828501610c32565b91505092915050565b5f5f60408385031215610dd757610dd6610be8565b5b5f610de485828601610c32565b9250506020610df585828601610c32565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e4357607f821691505b602082108103610e5657610e55610dff565b5b50919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610eb6602583610b62565b9150610ec182610e5c565b604082019050919050565b5f6020820190508181035f830152610ee381610eaa565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610f44602483610b62565b9150610f4f82610eea565b604082019050919050565b5f6020820190508181035f830152610f7181610f38565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610fd2602283610b62565b9150610fdd82610f78565b604082019050919050565b5f6020820190508181035f830152610fff81610fc6565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f61103a601d83610b62565b915061104582611006565b602082019050919050565b5f6020820190508181035f8301526110678161102e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6110c8602583610b62565b91506110d38261106e565b604082019050919050565b5f6020820190508181035f8301526110f5816110bc565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611156602383610b62565b9150611161826110fc565b604082019050919050565b5f6020820190508181035f8301526111838161114a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f6111e4602683610b62565b91506111ef8261118a565b604082019050919050565b5f6020820190508181035f830152611211816111d8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61124f82610c46565b915061125a83610c46565b925082820190508082111561127257611271611218565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f6112ac601b83610b62565b91506112b782611278565b602082019050919050565b5f6020820190508181035f8301526112d9816112a0565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f7700005f82015250565b5f611314601e83610b62565b915061131f826112e0565b602082019050919050565b5f6020820190508181035f83015261134181611308565b9050919050565b5f61135282610c46565b915061135d83610c46565b925082820390508181111561137557611374611218565b5b9291505056fea264697066735822122086e3274f03e4c85cb17c2837d2f08651f041bac0bc78a25307d65c5c6e42ae4464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x243 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x30D PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x31A DUP2 DUP6 DUP6 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x338 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x345 DUP6 DUP3 DUP6 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x350 DUP6 DUP6 DUP6 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x36E PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x38D DUP2 DUP6 PUSH2 0x388 PUSH2 0x382 DUP6 DUP10 PUSH2 0x50B JUMP JUMPDEST DUP8 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0xE2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x463 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x463 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x446 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x477 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x484 DUP3 DUP7 PUSH2 0x50B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C0 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP7 PUSH2 0x4D8 DUP5 DUP9 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4F3 PUSH2 0x58D JUMP JUMPDEST SWAP1 POP PUSH2 0x500 DUP2 DUP6 DUP6 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F9 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x762 DUP5 DUP5 PUSH2 0x50B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7E3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E2 DUP5 DUP5 PUSH2 0x7DD DUP5 DUP7 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84E SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 DUP4 DUP4 DUP4 PUSH2 0xB4E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95D DUP2 DUP4 PUSH2 0xAF6 JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9E3 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA93 DUP5 DUP5 DUP5 PUSH2 0xB53 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP5 PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x1245 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x12C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 GT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9A DUP3 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0xBA4 DUP2 DUP6 PUSH2 0xB62 JUMP JUMPDEST SWAP4 POP PUSH2 0xBB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xBBD DUP2 PUSH2 0xB80 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE0 DUP2 DUP5 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP2 EQ PUSH2 0xC2F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC40 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP2 EQ PUSH2 0xC62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC73 DUP2 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8E PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9C DUP6 DUP3 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAD DUP6 DUP3 DUP7 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xCB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE4 PUSH0 DUP4 ADD DUP5 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP2 PUSH2 0xC46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0C PUSH0 DUP4 ADD DUP5 PUSH2 0xCEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD36 DUP7 DUP3 DUP8 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD47 DUP7 DUP3 DUP8 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD58 DUP7 DUP3 DUP8 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0xD62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD90 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH2 0xDAA PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB8 DUP5 DUP3 DUP6 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH2 0xDD6 PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDE4 DUP6 DUP3 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDF5 DUP6 DUP3 DUP7 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xDFF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB6 PUSH1 0x25 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC1 DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE3 DUP2 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF44 PUSH1 0x24 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4F DUP3 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF71 DUP2 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD2 PUSH1 0x22 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDD DUP3 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFFF DUP2 PUSH2 0xFC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103A PUSH1 0x1D DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x1045 DUP3 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1067 DUP2 PUSH2 0x102E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C8 PUSH1 0x25 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D3 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F5 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1156 PUSH1 0x23 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x1161 DUP3 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1183 DUP2 PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E4 PUSH1 0x26 DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EF DUP3 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1211 DUP2 PUSH2 0x11D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x124F DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0x125A DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12AC PUSH1 0x1B DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x12B7 DUP3 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12D9 DUP2 PUSH2 0x12A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1314 PUSH1 0x1E DUP4 PUSH2 0xB62 JUMP JUMPDEST SWAP2 POP PUSH2 0x131F DUP3 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1341 DUP2 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1352 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0x135D DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH2 0x1374 PUSH2 0x1218 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE3 0x27 0x4F SUB 0xE4 0xC8 TLOAD 0xB1 PUSH29 0x2837D2F08651F041BAC0BC78A25307D65C5C6E42AE4464736F6C634300 ADDMOD SHL STOP CALLER ",
							"sourceMap": "1500:11819:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4510:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3279:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5291:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3121:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5961:251;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3450:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6715:449;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3783:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4039:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2150:100;2204:13;2237:5;2230:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:100;:::o;4510:201::-;4593:4;4610:13;4626:12;:10;:12::i;:::-;4610:28;;4649:32;4658:5;4665:7;4674:6;4649:8;:32::i;:::-;4699:4;4692:11;;;4510:201;;;;:::o;3279:108::-;3340:7;3367:12;;3360:19;;3279:108;:::o;5291:261::-;5388:4;5405:15;5423:12;:10;:12::i;:::-;5405:30;;5446:38;5462:4;5468:7;5477:6;5446:15;:38::i;:::-;5495:27;5505:4;5511:2;5515:6;5495:9;:27::i;:::-;5540:4;5533:11;;;5291:261;;;;;:::o;3121:93::-;3179:5;3204:2;3197:9;;3121:93;:::o;5961:251::-;6049:4;6066:13;6082:12;:10;:12::i;:::-;6066:28;;6105:77;6114:5;6121:7;6130:51;6143:25;6153:5;6160:7;6143:9;:25::i;:::-;6170:10;6130:12;:51::i;:::-;6105:8;:77::i;:::-;6200:4;6193:11;;;5961:251;;;;:::o;3450:127::-;3524:7;3551:9;:18;3561:7;3551:18;;;;;;;;;;;;;;;;3544:25;;3450:127;;;:::o;2369:104::-;2425:13;2458:7;2451:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:104;:::o;6715:449::-;6808:4;6825:13;6841:12;:10;:12::i;:::-;6825:28;;6864:24;6891:25;6901:5;6908:7;6891:9;:25::i;:::-;6864:52;;6955:15;6935:16;:35;;6927:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7048:73;7057:5;7064:7;7073:47;7086:16;7104:15;7073:12;:47::i;:::-;7048:8;:73::i;:::-;7152:4;7145:11;;;;6715:449;;;;:::o;3783:193::-;3862:4;3879:13;3895:12;:10;:12::i;:::-;3879:28;;3918;3928:5;3935:2;3939:6;3918:9;:28::i;:::-;3964:4;3957:11;;;3783:193;;;;:::o;4039:151::-;4128:7;4155:11;:18;4167:5;4155:18;;;;;;;;;;;;;;;:27;4174:7;4155:27;;;;;;;;;;;;;;;;4148:34;;4039:151;;;;:::o;601:98:0:-;654:7;681:10;674:17;;601:98;:::o;10862:346:1:-;10981:1;10964:19;;:5;:19;;;10956:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11062:1;11043:21;;:7;:21;;;11035:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11146:6;11116:11;:18;11128:5;11116:18;;;;;;;;;;;;;;;:27;11135:7;11116:27;;;;;;;;;;;;;;;:36;;;;11184:7;11168:32;;11177:5;11168:32;;;11193:6;11168:32;;;;;;:::i;:::-;;;;;;;;10862:346;;;:::o;11499:432::-;11600:24;11627:25;11637:5;11644:7;11627:9;:25::i;:::-;11600:52;;11687:17;11667:16;:37;11663:261;;11749:6;11729:16;:26;;11721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11833:64;11842:5;11849:7;11858:38;11871:16;11889:6;11858:12;:38::i;:::-;11833:8;:64::i;:::-;11663:261;11589:342;11499:432;;;:::o;7634:847::-;7747:1;7731:18;;:4;:18;;;7723:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7824:1;7810:16;;:2;:16;;;7802:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7879:38;7900:4;7906:2;7910:6;7879:20;:38::i;:::-;7930:19;7952:9;:15;7962:4;7952:15;;;;;;;;;;;;;;;;7930:37;;8001:6;7986:11;:21;;7978:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8104:33;8117:11;8130:6;8104:12;:33::i;:::-;8086:9;:15;8096:4;8086:15;;;;;;;;;;;;;;;:51;;;;8333:35;8346:9;:13;8356:2;8346:13;;;;;;;;;;;;;;;;8361:6;8333:12;:35::i;:::-;8317:9;:13;8327:2;8317:13;;;;;;;;;;;;;;;:51;;;;8412:2;8397:26;;8406:4;8397:26;;;8416:6;8397:26;;;;;;:::i;:::-;;;;;;;;8436:37;8456:4;8462:2;8466:6;8436:19;:37::i;:::-;7712:769;7634:847;;;:::o;2765:179:5:-;2823:7;2843:9;2859:1;2855;:5;;;;:::i;:::-;2843:17;;2884:1;2879;:6;;2871:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2935:1;2928:8;;;2765:179;;;;:::o;3227:158::-;3285:7;3318:1;3313;:6;;3305:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3376:1;3372;:5;;;;:::i;:::-;3365:12;;3227:158;;;;:::o;12531:91:1:-;;;;:::o;13226:90::-;;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:224::-;6213:34;6209:1;6201:6;6197:14;6190:58;6282:7;6277:2;6269:6;6265:15;6258:32;6073:224;:::o;6303:366::-;6445:3;6466:67;6530:2;6525:3;6466:67;:::i;:::-;6459:74;;6542:93;6631:3;6542:93;:::i;:::-;6660:2;6655:3;6651:12;6644:19;;6303:366;;;:::o;6675:419::-;6841:4;6879:2;6868:9;6864:18;6856:26;;6928:9;6922:4;6918:20;6914:1;6903:9;6899:17;6892:47;6956:131;7082:4;6956:131;:::i;:::-;6948:139;;6675:419;;;:::o;7100:223::-;7240:34;7236:1;7228:6;7224:14;7217:58;7309:6;7304:2;7296:6;7292:15;7285:31;7100:223;:::o;7329:366::-;7471:3;7492:67;7556:2;7551:3;7492:67;:::i;:::-;7485:74;;7568:93;7657:3;7568:93;:::i;:::-;7686:2;7681:3;7677:12;7670:19;;7329:366;;;:::o;7701:419::-;7867:4;7905:2;7894:9;7890:18;7882:26;;7954:9;7948:4;7944:20;7940:1;7929:9;7925:17;7918:47;7982:131;8108:4;7982:131;:::i;:::-;7974:139;;7701:419;;;:::o;8126:221::-;8266:34;8262:1;8254:6;8250:14;8243:58;8335:4;8330:2;8322:6;8318:15;8311:29;8126:221;:::o;8353:366::-;8495:3;8516:67;8580:2;8575:3;8516:67;:::i;:::-;8509:74;;8592:93;8681:3;8592:93;:::i;:::-;8710:2;8705:3;8701:12;8694:19;;8353:366;;;:::o;8725:419::-;8891:4;8929:2;8918:9;8914:18;8906:26;;8978:9;8972:4;8968:20;8964:1;8953:9;8949:17;8942:47;9006:131;9132:4;9006:131;:::i;:::-;8998:139;;8725:419;;;:::o;9150:179::-;9290:31;9286:1;9278:6;9274:14;9267:55;9150:179;:::o;9335:366::-;9477:3;9498:67;9562:2;9557:3;9498:67;:::i;:::-;9491:74;;9574:93;9663:3;9574:93;:::i;:::-;9692:2;9687:3;9683:12;9676:19;;9335:366;;;:::o;9707:419::-;9873:4;9911:2;9900:9;9896:18;9888:26;;9960:9;9954:4;9950:20;9946:1;9935:9;9931:17;9924:47;9988:131;10114:4;9988:131;:::i;:::-;9980:139;;9707:419;;;:::o;10132:224::-;10272:34;10268:1;10260:6;10256:14;10249:58;10341:7;10336:2;10328:6;10324:15;10317:32;10132:224;:::o;10362:366::-;10504:3;10525:67;10589:2;10584:3;10525:67;:::i;:::-;10518:74;;10601:93;10690:3;10601:93;:::i;:::-;10719:2;10714:3;10710:12;10703:19;;10362:366;;;:::o;10734:419::-;10900:4;10938:2;10927:9;10923:18;10915:26;;10987:9;10981:4;10977:20;10973:1;10962:9;10958:17;10951:47;11015:131;11141:4;11015:131;:::i;:::-;11007:139;;10734:419;;;:::o;11159:222::-;11299:34;11295:1;11287:6;11283:14;11276:58;11368:5;11363:2;11355:6;11351:15;11344:30;11159:222;:::o;11387:366::-;11529:3;11550:67;11614:2;11609:3;11550:67;:::i;:::-;11543:74;;11626:93;11715:3;11626:93;:::i;:::-;11744:2;11739:3;11735:12;11728:19;;11387:366;;;:::o;11759:419::-;11925:4;11963:2;11952:9;11948:18;11940:26;;12012:9;12006:4;12002:20;11998:1;11987:9;11983:17;11976:47;12040:131;12166:4;12040:131;:::i;:::-;12032:139;;11759:419;;;:::o;12184:225::-;12324:34;12320:1;12312:6;12308:14;12301:58;12393:8;12388:2;12380:6;12376:15;12369:33;12184:225;:::o;12415:366::-;12557:3;12578:67;12642:2;12637:3;12578:67;:::i;:::-;12571:74;;12654:93;12743:3;12654:93;:::i;:::-;12772:2;12767:3;12763:12;12756:19;;12415:366;;;:::o;12787:419::-;12953:4;12991:2;12980:9;12976:18;12968:26;;13040:9;13034:4;13030:20;13026:1;13015:9;13011:17;13004:47;13068:131;13194:4;13068:131;:::i;:::-;13060:139;;12787:419;;;:::o;13212:180::-;13260:77;13257:1;13250:88;13357:4;13354:1;13347:15;13381:4;13378:1;13371:15;13398:191;13438:3;13457:20;13475:1;13457:20;:::i;:::-;13452:25;;13491:20;13509:1;13491:20;:::i;:::-;13486:25;;13534:1;13531;13527:9;13520:16;;13555:3;13552:1;13549:10;13546:36;;;13562:18;;:::i;:::-;13546:36;13398:191;;;;:::o;13595:177::-;13735:29;13731:1;13723:6;13719:14;13712:53;13595:177;:::o;13778:366::-;13920:3;13941:67;14005:2;14000:3;13941:67;:::i;:::-;13934:74;;14017:93;14106:3;14017:93;:::i;:::-;14135:2;14130:3;14126:12;14119:19;;13778:366;;;:::o;14150:419::-;14316:4;14354:2;14343:9;14339:18;14331:26;;14403:9;14397:4;14393:20;14389:1;14378:9;14374:17;14367:47;14431:131;14557:4;14431:131;:::i;:::-;14423:139;;14150:419;;;:::o;14575:180::-;14715:32;14711:1;14703:6;14699:14;14692:56;14575:180;:::o;14761:366::-;14903:3;14924:67;14988:2;14983:3;14924:67;:::i;:::-;14917:74;;15000:93;15089:3;15000:93;:::i;:::-;15118:2;15113:3;15109:12;15102:19;;14761:366;;;:::o;15133:419::-;15299:4;15337:2;15326:9;15322:18;15314:26;;15386:9;15380:4;15376:20;15372:1;15361:9;15357:17;15350:47;15414:131;15540:4;15414:131;:::i;:::-;15406:139;;15133:419;;;:::o;15558:194::-;15598:4;15618:20;15636:1;15618:20;:::i;:::-;15613:25;;15652:20;15670:1;15652:20;:::i;:::-;15647:25;;15696:1;15693;15689:9;15681:17;;15720:1;15714:4;15711:11;15708:37;;;15725:18;;:::i;:::-;15708:37;15558:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1008200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2850",
								"decimals()": "427",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1964,
									"end": 2080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2044,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2036,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2031,
									"end": 2044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 13319,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086e3274f03e4c85cb17c2837d2f08651f041bac0bc78a25307d65c5c6e42ae4464736f6c634300081b0033",
									".code": [
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 13319,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2150,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2150,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4510,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4510,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4510,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3279,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3279,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5291,
											"end": 5552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5291,
											"end": 5552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5291,
											"end": 5552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3121,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3121,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5961,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5961,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3450,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3450,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3450,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6715,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6715,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3783,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3783,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3783,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4039,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4039,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4039,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2237,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2230,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2230,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4626,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4626,
											"end": 4638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 4638,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4626,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4658,
											"end": 4663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4672,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4649,
											"end": 4681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4681,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4649,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3379,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3367,
											"end": 3379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5423,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5423,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5446,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5505,
											"end": 5509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5513,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5495,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5522,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5495,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6082,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6082,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6094,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6082,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6114,
											"end": 6119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6128,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6143,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6143,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6168,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6143,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6180,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6130,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6181,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6130,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6105,
											"end": 6182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6182,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6105,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6193,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2458,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2451,
											"end": 2465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2451,
											"end": 2465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6841,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6841,
											"end": 6853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6841,
											"end": 6853,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6841,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6901,
											"end": 6906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6891,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6916,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6891,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 6970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6970,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6970,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6927,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6927,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7048,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7057,
											"end": 7062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7071,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7086,
											"end": 7102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7104,
											"end": 7119,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7073,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7120,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7073,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7048,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7048,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7048,
											"end": 7121,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7048,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 7164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3895,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3895,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 3933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3918,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3918,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3968,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3957,
											"end": 3968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4181,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 601,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 674,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 674,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10862,
											"end": 11208,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10862,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10981,
											"end": 10982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 10969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 10983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10956,
											"end": 11024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10956,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11043,
											"end": 11064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11043,
											"end": 11064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11035,
											"end": 11103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11035,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11127,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11133,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11142,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11152,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11193,
											"end": 11199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11168,
											"end": 11200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11200,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 11208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 11208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 11208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 11208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11931,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11499,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11600,
											"end": 11624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11627,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11637,
											"end": 11642,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11627,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11652,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11627,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11600,
											"end": 11652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11600,
											"end": 11652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11687,
											"end": 11704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11667,
											"end": 11683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11663,
											"end": 11924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11755,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11721,
											"end": 11789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11721,
											"end": 11789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 11842,
											"end": 11847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 11871,
											"end": 11887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11858,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11896,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 11858,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11833,
											"end": 11897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11897,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 11833,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11924,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11663,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11499,
											"end": 11931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 8481,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7634,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7723,
											"end": 7791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7824,
											"end": 7825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7802,
											"end": 7866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7802,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7879,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7879,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7879,
											"end": 7917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7879,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7879,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7952,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7930,
											"end": 7967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8007,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8007,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7978,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8117,
											"end": 8128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8104,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8137,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8104,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8100,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8346,
											"end": 8355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8333,
											"end": 8368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8368,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8333,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8329,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8368,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8406,
											"end": 8410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8416,
											"end": 8422,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8397,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8423,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8464,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8472,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 8436,
											"end": 8473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8473,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8436,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 8481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 8481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 8481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 8481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 8481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2944,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2765,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2855,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2871,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2871,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2936,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2944,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3385,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3227,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3292,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3305,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3305,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3373,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3372,
											"end": 3377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12531,
											"end": 12622,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 12531,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12531,
											"end": 12622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12531,
											"end": 12622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12531,
											"end": 12622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12531,
											"end": 12622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13316,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 13226,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6297,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6073,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6190,
											"end": 6248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6289,
											"name": "PUSH",
											"source": 6,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6277,
											"end": 6279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6269,
											"end": 6275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6669,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6303,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6466,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6466,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6466,
											"end": 6533,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6466,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6631,
											"end": 6634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6542,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6635,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6542,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6658,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 7094,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6675,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6928,
											"end": 6937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6912,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 6916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7082,
											"end": 7086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6956,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7087,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6956,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 7087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 7087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 7094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 7094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 7094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 7094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7323,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7100,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7274,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7236,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7224,
											"end": 7238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7304,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 7302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7695,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7329,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7471,
											"end": 7474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7556,
											"end": 7558,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7492,
											"end": 7559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7559,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7492,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7485,
											"end": 7559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7485,
											"end": 7559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7657,
											"end": 7660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7568,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7661,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7568,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7681,
											"end": 7684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 8120,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7701,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7867,
											"end": 7871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7894,
											"end": 7903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 7963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 7952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7938,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7918,
											"end": 7965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7982,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8113,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7982,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 8120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 8120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 8120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8126,
											"end": 8347,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8126,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8266,
											"end": 8300,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8250,
											"end": 8264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8339,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8330,
											"end": 8332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8311,
											"end": 8340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8126,
											"end": 8347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8126,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8719,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8353,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8495,
											"end": 8498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 8580,
											"end": 8582,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8575,
											"end": 8578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8516,
											"end": 8583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8681,
											"end": 8684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8592,
											"end": 8685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8685,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8592,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8710,
											"end": 8712,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8701,
											"end": 8713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8694,
											"end": 8713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8694,
											"end": 8713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 9144,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 8725,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8891,
											"end": 8895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8918,
											"end": 8927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8906,
											"end": 8932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8978,
											"end": 8987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 8976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 8988,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8949,
											"end": 8966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9132,
											"end": 9136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9006,
											"end": 9137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9137,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9006,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 9144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 9144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 9144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 9144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9150,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9290,
											"end": 9321,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9278,
											"end": 9284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9274,
											"end": 9288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9267,
											"end": 9322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 9557,
											"end": 9560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9498,
											"end": 9565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9498,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9663,
											"end": 9666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9574,
											"end": 9667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9574,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9692,
											"end": 9694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9687,
											"end": 9690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9676,
											"end": 9695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9335,
											"end": 9701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9873,
											"end": 9877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9960,
											"end": 9969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 9958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9924,
											"end": 9971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 10114,
											"end": 10118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9988,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9988,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 10126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 10126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10356,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 10132,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10306,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10256,
											"end": 10270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10341,
											"end": 10348,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10328,
											"end": 10334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10317,
											"end": 10349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10728,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10362,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10589,
											"end": 10591,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 10584,
											"end": 10587,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10525,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10525,
											"end": 10592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10525,
											"end": 10592,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10525,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10518,
											"end": 10592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10518,
											"end": 10592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10690,
											"end": 10693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 10601,
											"end": 10694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10694,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10601,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10703,
											"end": 10722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10703,
											"end": 10722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10728,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 11153,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10734,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10900,
											"end": 10904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10940,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 10941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10915,
											"end": 10941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10915,
											"end": 10941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 10996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 10985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10977,
											"end": 10997,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10958,
											"end": 10975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10951,
											"end": 10998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 11015,
											"end": 11146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11015,
											"end": 11146,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 11015,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11007,
											"end": 11146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11007,
											"end": 11146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 11153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 11153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 11153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 11153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11381,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11159,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11299,
											"end": 11333,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11283,
											"end": 11297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11334,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11368,
											"end": 11373,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11363,
											"end": 11365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11351,
											"end": 11366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11753,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 11387,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11529,
											"end": 11532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 11614,
											"end": 11616,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 11609,
											"end": 11612,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11550,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11617,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 11550,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 11715,
											"end": 11718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11626,
											"end": 11719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11719,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 11626,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11744,
											"end": 11746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11739,
											"end": 11742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11735,
											"end": 11747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11753,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 12178,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11759,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11925,
											"end": 11929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11963,
											"end": 11965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11952,
											"end": 11961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11940,
											"end": 11966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11940,
											"end": 11966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12012,
											"end": 12021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12002,
											"end": 12022,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11998,
											"end": 11999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11987,
											"end": 11996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 12000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 12023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 12166,
											"end": 12170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 12040,
											"end": 12171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12171,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 12040,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12032,
											"end": 12171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12032,
											"end": 12171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 12178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 12178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 12178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 12178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12184,
											"end": 12409,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12184,
											"end": 12409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12358,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12308,
											"end": 12322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12301,
											"end": 12359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH",
											"source": 6,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12388,
											"end": 12390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12380,
											"end": 12386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12376,
											"end": 12391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12369,
											"end": 12402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12184,
											"end": 12409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12184,
											"end": 12409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12781,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 12415,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12557,
											"end": 12560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 12642,
											"end": 12644,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 12637,
											"end": 12640,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12578,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 12578,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12578,
											"end": 12645,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 12578,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12571,
											"end": 12645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12571,
											"end": 12645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12654,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 12743,
											"end": 12746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12654,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12654,
											"end": 12747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12654,
											"end": 12747,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 12654,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12772,
											"end": 12774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12767,
											"end": 12770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12763,
											"end": 12775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 12775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 12775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 13206,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 12787,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12953,
											"end": 12957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12991,
											"end": 12993,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12980,
											"end": 12989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12968,
											"end": 12994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12968,
											"end": 12994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13040,
											"end": 13049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13034,
											"end": 13038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13030,
											"end": 13050,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13026,
											"end": 13027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13015,
											"end": 13024,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13004,
											"end": 13051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 13194,
											"end": 13198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 13068,
											"end": 13199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13068,
											"end": 13199,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 13068,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13060,
											"end": 13199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13060,
											"end": 13199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 13206,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 13206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 13206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 13206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13212,
											"end": 13392,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 13212,
											"end": 13392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13260,
											"end": 13337,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13257,
											"end": 13258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13250,
											"end": 13338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13361,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13354,
											"end": 13355,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13347,
											"end": 13362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13381,
											"end": 13385,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13378,
											"end": 13379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13589,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 13398,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13438,
											"end": 13441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13457,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 13475,
											"end": 13476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13457,
											"end": 13477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 13457,
											"end": 13477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13457,
											"end": 13477,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 13457,
											"end": 13477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13452,
											"end": 13477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13452,
											"end": 13477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13491,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 13509,
											"end": 13510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13491,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 13491,
											"end": 13511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13491,
											"end": 13511,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 13491,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13486,
											"end": 13511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13486,
											"end": 13511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13534,
											"end": 13535,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13531,
											"end": 13532,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13527,
											"end": 13536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13552,
											"end": 13553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13549,
											"end": 13559,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13546,
											"end": 13582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13546,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 13546,
											"end": 13582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 13562,
											"end": 13580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13546,
											"end": 13582,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 13546,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13398,
											"end": 13589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13595,
											"end": 13772,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 13595,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13735,
											"end": 13764,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 13731,
											"end": 13732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13719,
											"end": 13733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13712,
											"end": 13765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13595,
											"end": 13772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13595,
											"end": 13772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13778,
											"end": 14144,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 13778,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13920,
											"end": 13923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13941,
											"end": 14008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 14005,
											"end": 14007,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 14000,
											"end": 14003,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13941,
											"end": 14008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 13941,
											"end": 14008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13941,
											"end": 14008,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 13941,
											"end": 14008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13934,
											"end": 14008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13934,
											"end": 14008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14017,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 14106,
											"end": 14109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14017,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 14017,
											"end": 14110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14017,
											"end": 14110,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 14017,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14135,
											"end": 14137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14130,
											"end": 14133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14119,
											"end": 14138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14119,
											"end": 14138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13778,
											"end": 14144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13778,
											"end": 14144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13778,
											"end": 14144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13778,
											"end": 14144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14150,
											"end": 14569,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 14150,
											"end": 14569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14316,
											"end": 14320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14354,
											"end": 14356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14403,
											"end": 14412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14397,
											"end": 14401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14393,
											"end": 14413,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14389,
											"end": 14390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14374,
											"end": 14391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14367,
											"end": 14414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14431,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14557,
											"end": 14561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14431,
											"end": 14562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 14431,
											"end": 14562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14431,
											"end": 14562,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14431,
											"end": 14562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14150,
											"end": 14569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14150,
											"end": 14569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14150,
											"end": 14569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14150,
											"end": 14569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14575,
											"end": 14755,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 14575,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14715,
											"end": 14747,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 14711,
											"end": 14712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14703,
											"end": 14709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14699,
											"end": 14713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14692,
											"end": 14748,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14575,
											"end": 14755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14575,
											"end": 14755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 15127,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 14761,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14903,
											"end": 14906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14924,
											"end": 14991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 14988,
											"end": 14990,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 14983,
											"end": 14986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14924,
											"end": 14991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 14924,
											"end": 14991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14924,
											"end": 14991,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 14924,
											"end": 14991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14917,
											"end": 14991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14917,
											"end": 14991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15000,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 15089,
											"end": 15092,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15000,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 15000,
											"end": 15093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15000,
											"end": 15093,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 15000,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15118,
											"end": 15120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15113,
											"end": 15116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15109,
											"end": 15121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 15127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 15127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 15127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14761,
											"end": 15127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15552,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 15133,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15299,
											"end": 15303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15337,
											"end": 15339,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15326,
											"end": 15335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15322,
											"end": 15340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15314,
											"end": 15340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15314,
											"end": 15340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15386,
											"end": 15395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15380,
											"end": 15384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15376,
											"end": 15396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15372,
											"end": 15373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15357,
											"end": 15374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15350,
											"end": 15397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15414,
											"end": 15545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 15540,
											"end": 15544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15414,
											"end": 15545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 15414,
											"end": 15545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15414,
											"end": 15545,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 15414,
											"end": 15545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15406,
											"end": 15545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15406,
											"end": 15545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15133,
											"end": 15552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15752,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 15558,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15598,
											"end": 15602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 15636,
											"end": 15637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 15618,
											"end": 15638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15613,
											"end": 15638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15613,
											"end": 15638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15652,
											"end": 15672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 15670,
											"end": 15671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15652,
											"end": 15672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 15652,
											"end": 15672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15652,
											"end": 15672,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 15652,
											"end": 15672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15647,
											"end": 15672,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15647,
											"end": 15672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15696,
											"end": 15697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15693,
											"end": 15694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15689,
											"end": 15698,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15681,
											"end": 15698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15681,
											"end": 15698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15720,
											"end": 15721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15714,
											"end": 15718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15711,
											"end": 15722,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15708,
											"end": 15745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15708,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 15708,
											"end": 15745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15725,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 15725,
											"end": 15743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 15725,
											"end": 15743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15725,
											"end": 15743,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 15725,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15708,
											"end": 15745,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 15708,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xc5362693190540c7f642ec79ab1f3ec643706aadf7f306fadf8c334b137cbde3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c383a771310756218fe5e3feb6d4b49bee8d99342c15e04e376db34be0c9faf\",\"dweb:/ipfs/QmWx7coqVjLhfvBwdRsfoxk6nQxTnWzqAYJzvx8kogbWsm\"]},\"ERC20.sol\":{\"keccak256\":\"0x90e93793910a4f203f7feb9aaef1dd005548a993af0fbc1909e06e54ae7b5e8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31eebd56d0eb53c594a9aaf48a76e01b4bd4e7cf8ad39f9feb09c6c9d9785f3\",\"dweb:/ipfs/QmZiexBQNoaqsHhjpFFV2BthdLXjBroXMSKym1Ky91kYXz\"]},\"IERC20.sol\":{\"keccak256\":\"0xa341ed20e9e93ed893a62d3f4edc8d127093ca4cdd4daa4d937e547037d574d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d2a3013307cc73e902dd848f5868e568c0d52bbec675cd6dea1b477b37c19f\",\"dweb:/ipfs/QmPs9TQ2jCaj9AMD9iHURHeyPrMh6Bn6cqrLcTSSSReErB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc2c89e3befb2c70093c2111c755453613ad4c245d6e1082a8c8da76d6a6f1dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30f6b348d3c647eae8e22e748c1e7bfe8ddcc746f5ff3b2af84a24f1a0dcdc9c\",\"dweb:/ipfs/QmaGJe1o2e71oHZNkCZLXR9raXNvo6Goimu64zyC3fv3at\"]},\"SafeMath.sol\":{\"keccak256\":\"0x3f760c50266d095956558091a494650416ad297dac18d71341a63a32798bfff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10665362cf6c8d113a5d6346b1aab96c42c585f1659edb2eb554ed925b62bf3a\",\"dweb:/ipfs/QmTY8nwFPEAPAwRQ3ra9B1YvKUKo7p8QLjEyz2GUCBggCT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 38,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 44,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 46,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 48,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 50,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xc5362693190540c7f642ec79ab1f3ec643706aadf7f306fadf8c334b137cbde3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c383a771310756218fe5e3feb6d4b49bee8d99342c15e04e376db34be0c9faf\",\"dweb:/ipfs/QmWx7coqVjLhfvBwdRsfoxk6nQxTnWzqAYJzvx8kogbWsm\"]},\"ERC20.sol\":{\"keccak256\":\"0x90e93793910a4f203f7feb9aaef1dd005548a993af0fbc1909e06e54ae7b5e8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31eebd56d0eb53c594a9aaf48a76e01b4bd4e7cf8ad39f9feb09c6c9d9785f3\",\"dweb:/ipfs/QmZiexBQNoaqsHhjpFFV2BthdLXjBroXMSKym1Ky91kYXz\"]},\"ERC20Burnable.sol\":{\"keccak256\":\"0x9fc9c9c3bd4b02b3e3cc9aa14cf993aabb83e6320189630b0a1a2ec83475ffce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2576659c4a78059b4bf21620058b08f3a692765866a0510fea6d15071f8c41f3\",\"dweb:/ipfs/Qmc6HDTQTCr1TZKh6cj31t92z4T1zGjTsuLnQdayANcSpP\"]},\"IERC20.sol\":{\"keccak256\":\"0xa341ed20e9e93ed893a62d3f4edc8d127093ca4cdd4daa4d937e547037d574d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d2a3013307cc73e902dd848f5868e568c0d52bbec675cd6dea1b477b37c19f\",\"dweb:/ipfs/QmPs9TQ2jCaj9AMD9iHURHeyPrMh6Bn6cqrLcTSSSReErB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc2c89e3befb2c70093c2111c755453613ad4c245d6e1082a8c8da76d6a6f1dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30f6b348d3c647eae8e22e748c1e7bfe8ddcc746f5ff3b2af84a24f1a0dcdc9c\",\"dweb:/ipfs/QmaGJe1o2e71oHZNkCZLXR9raXNvo6Goimu64zyC3fv3at\"]},\"SafeMath.sol\":{\"keccak256\":\"0x3f760c50266d095956558091a494650416ad297dac18d71341a63a32798bfff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10665362cf6c8d113a5d6346b1aab96c42c585f1659edb2eb554ed925b62bf3a\",\"dweb:/ipfs/QmTY8nwFPEAPAwRQ3ra9B1YvKUKo7p8QLjEyz2GUCBggCT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 38,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 44,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 46,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 48,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 50,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa341ed20e9e93ed893a62d3f4edc8d127093ca4cdd4daa4d937e547037d574d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d2a3013307cc73e902dd848f5868e568c0d52bbec675cd6dea1b477b37c19f\",\"dweb:/ipfs/QmPs9TQ2jCaj9AMD9iHURHeyPrMh6Bn6cqrLcTSSSReErB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa341ed20e9e93ed893a62d3f4edc8d127093ca4cdd4daa4d937e547037d574d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64d2a3013307cc73e902dd848f5868e568c0d52bbec675cd6dea1b477b37c19f\",\"dweb:/ipfs/QmPs9TQ2jCaj9AMD9iHURHeyPrMh6Bn6cqrLcTSSSReErB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc2c89e3befb2c70093c2111c755453613ad4c245d6e1082a8c8da76d6a6f1dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30f6b348d3c647eae8e22e748c1e7bfe8ddcc746f5ff3b2af84a24f1a0dcdc9c\",\"dweb:/ipfs/QmaGJe1o2e71oHZNkCZLXR9raXNvo6Goimu64zyC3fv3at\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":638:7428  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":638:7428  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220e11f773331ef25f7648f5587454d852090b9bc339790c1ca07c0d3c5249c766c64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e11f773331ef25f7648f5587454d852090b9bc339790c1ca07c0d3c5249c766c64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0x1F PUSH24 0x3331EF25F7648F5587454D852090B9BC339790C1CA07C0D3 0xC5 0x24 SWAP13 PUSH23 0x6C64736F6C634300081B00330000000000000000000000 ",
							"sourceMap": "638:6790:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e11f773331ef25f7648f5587454d852090b9bc339790c1ca07c0d3c5249c766c64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0x1F PUSH24 0x3331EF25F7648F5587454D852090B9BC339790C1CA07C0D3 0xC5 0x24 SWAP13 PUSH23 0x6C64736F6C634300081B00330000000000000000000000 ",
							"sourceMap": "638:6790:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 638,
									"end": 7428,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e11f773331ef25f7648f5587454d852090b9bc339790c1ca07c0d3c5249c766c64736f6c634300081b0033",
									".code": [
										{
											"begin": 638,
											"end": 7428,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 7428,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x3f760c50266d095956558091a494650416ad297dac18d71341a63a32798bfff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10665362cf6c8d113a5d6346b1aab96c42c585f1659edb2eb554ed925b62bf3a\",\"dweb:/ipfs/QmTY8nwFPEAPAwRQ3ra9B1YvKUKo7p8QLjEyz2GUCBggCT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "586:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "663:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "681:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "685:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "681:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "674:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "610:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:9:0"
									},
									"scope": 21,
									"src": "601:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "774:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "792:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "796:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "792:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "785:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "758:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "758:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:16:0"
									},
									"scope": 21,
									"src": "707:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "568:243:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:778:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							639
						],
						"IERC20": [
							761
						],
						"IERC20Metadata": [
							786
						],
						"SafeMath": [
							1141
						]
					},
					"id": 640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 640,
							"sourceUnit": 22,
							"src": "61:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 640,
							"sourceUnit": 762,
							"src": "86:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 640,
							"sourceUnit": 787,
							"src": "110:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 640,
							"sourceUnit": 1142,
							"src": "142:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 29,
										"name": "Context",
										"nameLocations": [
											"1518:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1518:7:1"
									},
									"id": 30,
									"nodeType": "InheritanceSpecifier",
									"src": "1518:7:1"
								},
								{
									"baseName": {
										"id": 31,
										"name": "IERC20",
										"nameLocations": [
											"1527:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "1527:6:1"
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "1527:6:1"
								},
								{
									"baseName": {
										"id": 33,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1535:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 786,
										"src": "1535:14:1"
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "1535:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 28,
								"nodeType": "StructuredDocumentation",
								"src": "170:1328:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639,
								786,
								761,
								21
							],
							"name": "ERC20",
							"nameLocation": "1509:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1593:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "1557:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1565:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1557:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1576:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1667:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "1611:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 43,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1619:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1611:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 42,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 40,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1638:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1630:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 41,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1649:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 46,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1703:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "1687:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 45,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1687:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1739:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "1724:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 47,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1724:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1766:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 639,
									"src": "1751:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 49,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1751:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2020:60:1",
										"statements": [
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 58,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2031:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 59,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "2039:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2031:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "2031:13:1"
											},
											{
												"expression": {
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 62,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2055:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 63,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2065:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:1"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1782:176:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 67,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1990:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1976:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 52,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2011:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1997:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:44:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2020:0:1"
									},
									"scope": 639,
									"src": "1964:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2219:31:1",
										"statements": [
											{
												"expression": {
													"id": 74,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 48,
													"src": "2237:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 73,
												"id": 75,
												"nodeType": "Return",
												"src": "2230:12:1"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2088:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2159:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 70,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2186:8:1"
									},
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2163:2:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2204:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 71,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2204:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:15:1"
									},
									"scope": 639,
									"src": "2150:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2440:33:1",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "2458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2451:14:1"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2258:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:1"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:1"
									},
									"scope": 639,
									"src": "2369:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										785
									],
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "3186:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3204:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 93,
												"id": 95,
												"nodeType": "Return",
												"src": "3197:9:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2481:634:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3130:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 90,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3161:8:1"
									},
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3179:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 91,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3179:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3178:7:1"
									},
									"scope": 639,
									"src": "3121:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										710
									],
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "3349:38:1",
										"statements": [
											{
												"expression": {
													"id": 104,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "3367:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 105,
												"nodeType": "Return",
												"src": "3360:19:1"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "3222:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3288:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3322:8:1"
									},
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3299:2:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3340:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:9:1"
									},
									"scope": 639,
									"src": "3279:108:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										718
									],
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "3533:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 116,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "3551:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 118,
													"indexExpression": {
														"id": 117,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "3561:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3551:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 115,
												"id": 119,
												"nodeType": "Return",
												"src": "3544:25:1"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3395:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3459:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 112,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3506:8:1"
									},
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3477:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3469:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3468:17:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3524:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:9:1"
									},
									"scope": 639,
									"src": "3450:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3868:108:1",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3887:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "3879:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 136,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3895:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3895:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3879:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 138,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3928:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 139,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "3935:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3939:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 137,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3918:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3918:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3964:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 131,
												"id": 144,
												"nodeType": "Return",
												"src": "3957:11:1"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "3585:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3792:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3844:8:1"
									},
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3809:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3801:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3821:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3813:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:28:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3862:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3862:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3861:6:1"
									},
									"scope": 639,
									"src": "3783:193:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4137:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 157,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "4155:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 159,
														"indexExpression": {
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4167:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4155:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 161,
													"indexExpression": {
														"id": 160,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "4174:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4155:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 162,
												"nodeType": "Return",
												"src": "4148:34:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3984:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4048:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4110:8:1"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4066:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4058:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4058:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4081:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4073:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4057:32:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "4128:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:9:1"
									},
									"scope": 639,
									"src": "4039:151:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "4599:112:1",
										"statements": [
											{
												"assignments": [
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 176,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4618:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "4610:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 175,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4610:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 177,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4626:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4626:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4610:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4658:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 182,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4665:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4674:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 180,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "4649:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4649:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "4649:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4699:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 174,
												"id": 187,
												"nodeType": "Return",
												"src": "4692:11:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "4198:306:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4519:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4575:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4535:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4527:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4527:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4552:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4544:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4544:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:33:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:6:1"
									},
									"scope": 639,
									"src": "4510:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										760
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "5394:158:1",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5413:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "5405:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 202,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5405:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 206,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 204,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5423:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5405:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5462:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5477:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 207,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "5446:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5446:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "5446:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5515:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5495:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5495:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "5495:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5540:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 201,
												"id": 220,
												"nodeType": "Return",
												"src": "5533:11:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "4719:566:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5300:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5370:8:1"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5321:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5313:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5335:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5327:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5347:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5339:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5312:42:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5388:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5388:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5387:6:1"
									},
									"scope": 639,
									"src": "5291:261:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "6055:157:1",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6074:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "6066:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6066:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 234,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6082:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6082:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6066:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 243,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "6153:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 244,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "6160:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 242,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "6143:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address,address) view returns (uint256)"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6143:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 246,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "6170:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "6130:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6139:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 968,
																"src": "6130:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6130:51:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "6105:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6105:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "6105:77:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6200:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 231,
												"id": 251,
												"nodeType": "Return",
												"src": "6193:11:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "5560:395:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5970:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5996:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "5988:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6013:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "6005:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5987:37:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "6049:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6049:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:6:1"
									},
									"scope": 639,
									"src": "5961:251:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "6814:350:1",
										"statements": [
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6833:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "6825:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 263,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6825:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 265,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6841:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6825:28:1"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6872:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "6864:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6864:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "6901:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "6908:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 270,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "6891:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6891:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6864:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 276,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6935:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 277,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "6955:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6935:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6972:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6927:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6927:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "6927:85:1"
											},
											{
												"id": 292,
												"nodeType": "UncheckedBlock",
												"src": "7023:110:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 283,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "7057:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 284,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "7064:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 287,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "7086:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 288,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 258,
																			"src": "7104:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 285,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "7073:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7082:3:1",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 990,
																		"src": "7073:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7073:47:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 282,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "7048:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7048:73:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 291,
														"nodeType": "ExpressionStatement",
														"src": "7048:73:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7152:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 262,
												"id": 294,
												"nodeType": "Return",
												"src": "7145:11:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "6220:489:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6724:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6750:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6742:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6742:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6767:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6759:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6741:42:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 639,
									"src": "6715:449:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "7712:769:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "7731:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7747:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7739:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7739:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7739:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7731:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7751:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7723:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7723:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "7723:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "7810:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7824:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7816:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7816:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7816:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7810:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7828:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7802:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7802:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "7802:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7900:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7906:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "7910:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "7879:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7879:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "7879:38:1"
											},
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7938:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "7930:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7930:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"baseExpression": {
														"id": 334,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "7952:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 336,
													"indexExpression": {
														"id": 335,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "7962:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7952:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7930:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "7986:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 340,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "8001:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7986:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8009:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7978:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "7978:72:1"
											},
											{
												"id": 367,
												"nodeType": "UncheckedBlock",
												"src": "8061:319:1",
												"statements": [
													{
														"expression": {
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 345,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "8086:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 347,
																"indexExpression": {
																	"id": 346,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "8096:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8086:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 350,
																		"name": "fromBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "8117:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 351,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "8130:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 348,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "8104:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8113:3:1",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 990,
																	"src": "8104:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8104:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8086:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 354,
														"nodeType": "ExpressionStatement",
														"src": "8086:51:1"
													},
													{
														"expression": {
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 355,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "8317:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 357,
																"indexExpression": {
																	"id": 356,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8327:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8317:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 360,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "8346:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 362,
																		"indexExpression": {
																			"id": 361,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 301,
																			"src": "8356:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8346:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 363,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "8361:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 358,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "8333:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8342:3:1",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 968,
																	"src": "8333:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8333:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8317:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 366,
														"nodeType": "ExpressionStatement",
														"src": "8317:51:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "8406:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8412:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "8416:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "8397:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8397:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "8392:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "8456:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8462:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "8466:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8436:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8436:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "8436:37:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "7172:456:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7643:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7687:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7679:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7652:42:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7712:0:1"
									},
									"scope": 639,
									"src": "7634:847:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "8833:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 390,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "8852:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8871:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8863:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8863:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8863:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8852:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8875:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8844:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8844:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "8844:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8951:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8943:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8943:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8943:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8955:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "8964:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "8922:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8922:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "8922:49:1"
											},
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 408,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8984:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 411,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "9012:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 412,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "9026:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 409,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "8999:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9008:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 968,
															"src": "8999:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8999:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8984:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "8984:49:1"
											},
											{
												"id": 428,
												"nodeType": "UncheckedBlock",
												"src": "9044:211:1",
												"statements": [
													{
														"expression": {
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 416,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "9182:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 418,
																"indexExpression": {
																	"id": 417,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "9192:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9182:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 421,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "9216:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 423,
																		"indexExpression": {
																			"id": 422,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 384,
																			"src": "9226:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9216:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 424,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "9236:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 419,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "9203:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9212:3:1",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 968,
																	"src": "9203:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9203:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9182:61:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 427,
														"nodeType": "ExpressionStatement",
														"src": "9182:61:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9287:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9279:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 430,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9279:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9279:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 434,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "9291:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "9300:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 429,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9270:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9270:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "EmitStatement",
												"src": "9265:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9348:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9340:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 439,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9340:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9340:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "9352:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "9361:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "9320:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9320:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "9320:48:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "8489:273:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8777:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8791:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "8783:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8783:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8808:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "8800:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8782:33:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8833:0:1"
									},
									"scope": 639,
									"src": "8768:608:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "9774:650:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "9793:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9812:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9804:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9804:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9804:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9793:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9816:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9785:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9785:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "9785:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "9886:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 468,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "9907:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "9865:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9865:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "9865:49:1"
											},
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9935:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "9927:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9927:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"baseExpression": {
														"id": 477,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "9952:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 479,
													"indexExpression": {
														"id": 478,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "9962:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9952:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9927:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "9989:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 483,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "10007:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9989:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10015:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9981:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "9981:71:1"
											},
											{
												"id": 506,
												"nodeType": "UncheckedBlock",
												"src": "10063:238:1",
												"statements": [
													{
														"expression": {
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 488,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "10088:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 490,
																"indexExpression": {
																	"id": 489,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "10098:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10088:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 493,
																		"name": "accountBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "10122:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 494,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "10138:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 491,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "10109:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10118:3:1",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 990,
																	"src": "10109:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10109:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10088:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 497,
														"nodeType": "ExpressionStatement",
														"src": "10088:57:1"
													},
													{
														"expression": {
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 498,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "10240:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 501,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "10268:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 502,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "10282:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 499,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "10255:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10264:3:1",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 990,
																	"src": "10255:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10255:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10240:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 505,
														"nodeType": "ExpressionStatement",
														"src": "10240:49:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 508,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "10327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10336:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10336:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10336:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "10348:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10318:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10318:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "10313:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "10388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10405:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10397:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10397:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10397:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "10409:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10368:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10368:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "10368:48:1"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "9384:319:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9718:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9732:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9724:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9749:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "9741:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9723:33:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9774:0:1"
									},
									"scope": 639,
									"src": "9709:715:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "10945:263:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "10964:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10981:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10973:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10973:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10973:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10964:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10985:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10956:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "10956:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "11043:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11062:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11054:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 548,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11054:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11054:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11043:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11066:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11035:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "11035:68:1"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 556,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "11116:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 559,
															"indexExpression": {
																"id": 557,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "11128:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11116:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 560,
														"indexExpression": {
															"id": 558,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "11135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11116:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 561,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "11146:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11116:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "11116:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "11177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "11184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "11193:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "11168:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11168:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "11163:37:1"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "10432:424:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10871:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10888:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "10880:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10903:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "10895:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10895:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10920:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "10912:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10879:48:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10945:0:1"
									},
									"scope": 639,
									"src": "10862:346:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "11589:342:1",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11608:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "11600:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11600:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"arguments": [
														{
															"id": 584,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "11637:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "11644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 583,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "11627:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11627:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11600:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "11667:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11692:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11692:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 589,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11687:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11687:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11701:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11687:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11667:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "11663:261:1",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "11706:218:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 596,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "11729:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 597,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "11749:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11729:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11757:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 595,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11721:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 601,
															"nodeType": "ExpressionStatement",
															"src": "11721:68:1"
														},
														{
															"id": 612,
															"nodeType": "UncheckedBlock",
															"src": "11804:109:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 603,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 574,
																				"src": "11842:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 604,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 576,
																				"src": "11849:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 607,
																						"name": "currentAllowance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 582,
																						"src": "11871:16:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 608,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 578,
																						"src": "11889:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 605,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1141,
																						"src": "11858:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$1141_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11867:3:1",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 990,
																					"src": "11858:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11858:38:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 602,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "11833:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11833:64:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 611,
																	"nodeType": "ExpressionStatement",
																	"src": "11833:64:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "11216:277:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11508:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11532:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "11524:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11524:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11547:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "11539:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11539:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11564:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "11556:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11556:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11523:48:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11589:0:1"
									},
									"scope": 639,
									"src": "11499:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "12620:2:1",
										"statements": []
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "11939:586:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12540:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12569:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12561:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12561:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12583:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12575:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12595:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12587:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12560:42:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12620:0:1"
									},
									"scope": 639,
									"src": "12531:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "13314:2:1",
										"statements": []
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "12630:590:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13235:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13263:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "13255:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13255:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13277:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "13269:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13269:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13289:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "13281:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13254:42:1"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13314:0:1"
									},
									"scope": 639,
									"src": "13226:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 640,
							"src": "1500:11819:1",
							"usedErrors": [],
							"usedEvents": [
								695,
								704
							]
						}
					],
					"src": "33:13286:1"
				},
				"id": 1
			},
			"ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							639
						],
						"ERC20Burnable": [
							683
						],
						"IERC20": [
							761
						],
						"IERC20Metadata": [
							786
						],
						"SafeMath": [
							1141
						]
					},
					"id": 684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 684,
							"sourceUnit": 22,
							"src": "61:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 643,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 684,
							"sourceUnit": 640,
							"src": "86:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 645,
										"name": "Context",
										"nameLocations": [
											"360:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "360:7:2"
									},
									"id": 646,
									"nodeType": "InheritanceSpecifier",
									"src": "360:7:2"
								},
								{
									"baseName": {
										"id": 647,
										"name": "ERC20",
										"nameLocations": [
											"369:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 639,
										"src": "369:5:2"
									},
									"id": 648,
									"nodeType": "InheritanceSpecifier",
									"src": "369:5:2"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 644,
								"nodeType": "StructuredDocumentation",
								"src": "111:212:2",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 683,
							"linearizedBaseContracts": [
								683,
								639,
								786,
								761,
								21
							],
							"name": "ERC20Burnable",
							"nameLocation": "343:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "535:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 655,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "552:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "552:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "566:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "546:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "546:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "546:27:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "382:102:2",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "499:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:16:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:0:2"
									},
									"scope": 683,
									"src": "490:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "966:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "993:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 671,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1002:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1002:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "1016:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 669,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "977:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "977:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1040:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "1049:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1034:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "1034:22:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "589:305:2",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "909:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "918:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "943:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "935:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:33:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:0:2"
									},
									"scope": 683,
									"src": "900:164:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 684,
							"src": "325:742:2",
							"usedErrors": [],
							"usedEvents": [
								695,
								704
							]
						}
					],
					"src": "33:1034:2"
				},
				"id": 2
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							761
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 686,
								"nodeType": "StructuredDocumentation",
								"src": "61:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 761,
							"linearizedBaseContracts": [
								761
							],
							"name": "IERC20",
							"nameLocation": "145:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "159:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 695,
									"name": "Transfer",
									"nameLocation": "334:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "359:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "343:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "381:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "365:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "393:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "385:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:57:3"
									},
									"src": "328:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "408:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 704,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "619:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "603:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "636:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "628:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:63:3"
									},
									"src": "565:78:3"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "651:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "734:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "771:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:9:3"
									},
									"scope": 761,
									"src": "725:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "788:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "877:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "895:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "887:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:17:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "927:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:9:3"
									},
									"scope": 761,
									"src": "868:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "944:208:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1167:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1184:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1176:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1196:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1188:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:28:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1222:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:6:3"
									},
									"scope": 761,
									"src": "1158:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "1236:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1521:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1539:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1531:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1554:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1546:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:32:3"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1586:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:9:3"
									},
									"scope": 761,
									"src": "1512:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "1603:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2273:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2289:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2281:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2306:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2298:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:33:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2332:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2332:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:6:3"
									},
									"scope": 761,
									"src": "2264:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2346:295:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2669:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2683:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2695:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2729:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:3"
									},
									"scope": 761,
									"src": "2647:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 762,
							"src": "135:2603:3",
							"usedErrors": [],
							"usedEvents": [
								695,
								704
							]
						}
					],
					"src": "33:2705:3"
				},
				"id": 3
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							761
						],
						"IERC20Metadata": [
							786
						]
					},
					"id": 787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 787,
							"sourceUnit": 762,
							"src": "61:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 766,
										"name": "IERC20",
										"nameLocations": [
											"237:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "237:6:4"
									},
									"id": 767,
									"nodeType": "InheritanceSpecifier",
									"src": "237:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 765,
								"nodeType": "StructuredDocumentation",
								"src": "87:120:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 786,
							"linearizedBaseContracts": [
								786,
								761
							],
							"name": "IERC20Metadata",
							"nameLocation": "219:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "251:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "322:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "352:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "352:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:15:4"
									},
									"scope": 786,
									"src": "313:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "375:58:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "448:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "480:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "480:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:15:4"
									},
									"scope": 786,
									"src": "439:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "503:67:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "585:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "619:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 782,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:7:4"
									},
									"scope": 786,
									"src": "576:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 787,
							"src": "209:420:4",
							"usedErrors": [],
							"usedEvents": [
								695,
								704
							]
						}
					],
					"src": "33:596:4"
				},
				"id": 4
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1141
						]
					},
					"id": 1142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 788,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "61:575:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1141,
							"linearizedBaseContracts": [
								1141
							],
							"name": "SafeMath",
							"nameLocation": "646:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "879:102:5",
										"statements": [
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "898:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "890:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "890:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "902:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 804,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "902:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "890:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "922:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 808,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "926:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "922:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "918:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "937:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "944:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 812,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "936:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 800,
													"id": 813,
													"nodeType": "Return",
													"src": "929:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "965:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 816,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "971:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 817,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "964:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 800,
												"id": 818,
												"nodeType": "Return",
												"src": "957:16:5"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "662:135:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "812:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "827:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "819:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "838:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "830:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:22:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "864:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "870:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:15:5"
									},
									"scope": 1141,
									"src": "803:178:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "1210:78:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "1225:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 833,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1229:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1225:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "1221:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1240:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 837,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1239:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 831,
													"id": 838,
													"nodeType": "Return",
													"src": "1232:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1268:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "1274:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 842,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "1278:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 844,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1267:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 831,
												"id": 845,
												"nodeType": "Return",
												"src": "1260:20:5"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "989:139:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1143:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1158:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1150:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1169:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1161:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:22:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1195:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:5"
									},
									"scope": 1141,
									"src": "1134:154:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "1519:367:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "1755:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1755:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "1751:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1771:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1777:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 864,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1770:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 858,
													"id": 865,
													"nodeType": "Return",
													"src": "1763:16:5"
												}
											},
											{
												"assignments": [
													868
												],
												"declarations": [
													{
														"constant": false,
														"id": 868,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1798:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "1790:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 867,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1790:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 869,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "1802:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 870,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1806:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1790:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "1822:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 874,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "1826:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1822:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 876,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1831:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1822:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "1818:33:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1842:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1849:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 880,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1841:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 858,
													"id": 881,
													"nodeType": "Return",
													"src": "1834:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1870:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 884,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "1876:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 885,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1869:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 858,
												"id": 886,
												"nodeType": "Return",
												"src": "1862:16:5"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "1296:141:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1452:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1467:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1459:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1478:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1470:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:22:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1504:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 854,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1504:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1510:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1503:15:5"
									},
									"scope": 1141,
									"src": "1443:443:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2118:79:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 900,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "2133:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2138:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2133:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "2129:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2149:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2156:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 905,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2148:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 899,
													"id": 906,
													"nodeType": "Return",
													"src": "2141:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "2183:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 910,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "2187:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2183:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 912,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2176:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 899,
												"id": 913,
												"nodeType": "Return",
												"src": "2169:20:5"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1894:142:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2051:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2066:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2058:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2077:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2069:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:22:5"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2103:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2103:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2109:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:15:5"
									},
									"scope": 1141,
									"src": "2042:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2439:79:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 927,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "2454:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2459:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2454:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "2450:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2470:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2477:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 932,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2469:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 926,
													"id": 933,
													"nodeType": "Return",
													"src": "2462:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2498:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "2504:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 937,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "2508:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 939,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2497:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 926,
												"id": 940,
												"nodeType": "Return",
												"src": "2490:20:5"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2205:152:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2372:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2387:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2379:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2398:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2390:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2378:22:5"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2424:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2424:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2430:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:15:5"
									},
									"scope": 1141,
									"src": "2363:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "2832:112:5",
										"statements": [
											{
												"assignments": [
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2851:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 967,
														"src": "2843:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2843:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 954,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2855:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 955,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2859:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2855:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2843:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "2879:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 960,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "2884:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2879:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2887:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2871:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2871:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2871:46:5"
											},
											{
												"expression": {
													"id": 965,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 953,
													"src": "2935:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 951,
												"id": 966,
												"nodeType": "Return",
												"src": "2928:8:5"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "2526:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2774:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2786:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2778:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2778:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2797:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2789:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2777:22:5"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2823:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2822:9:5"
									},
									"scope": 1141,
									"src": "2765:179:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "3294:91:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "3313:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 980,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "3318:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3313:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3305:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "3305:49:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "3372:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 986,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "3376:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3372:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 977,
												"id": 988,
												"nodeType": "Return",
												"src": "3365:12:5"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "2952:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3236:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3248:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "3240:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3240:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3259:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "3251:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3239:22:5"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "3285:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3284:9:5"
									},
									"scope": 1141,
									"src": "3227:158:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "3711:153:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1000,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "3726:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3731:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3726:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "3722:20:5",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3741:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 999,
													"id": 1004,
													"nodeType": "Return",
													"src": "3734:8:5"
												}
											},
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3761:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1023,
														"src": "3753:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1006,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3753:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1008,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "3765:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1009,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3769:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3765:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3753:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1013,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "3789:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1014,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "3793:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3789:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "3798:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3789:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3801:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3781:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3781:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "3781:56:5"
											},
											{
												"expression": {
													"id": 1021,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1007,
													"src": "3855:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 999,
												"id": 1022,
												"nodeType": "Return",
												"src": "3848:8:5"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "3393:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3653:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:22:5"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3702:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3702:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3701:9:5"
									},
									"scope": 1141,
									"src": "3644:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "4409:86:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "4428:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4432:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4428:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4435:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4420:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "4420:44:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "4482:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1042,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4486:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4482:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1044,
												"nodeType": "Return",
												"src": "4475:12:5"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "3872:464:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4351:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4354:22:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4400:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:9:5"
									},
									"scope": 1141,
									"src": "4342:153:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "5029:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1057,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "5048:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5052:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5048:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5055:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5040:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5040:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "5040:42:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "5100:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1064,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "5104:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5100:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1066,
												"nodeType": "Return",
												"src": "5093:12:5"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "4503:453:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4971:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4983:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "4975:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "4986:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4974:22:5"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5020:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5019:9:5"
									},
									"scope": 1141,
									"src": "4962:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "5687:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "5706:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1082,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "5711:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5706:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1084,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "5714:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5698:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5698:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "5698:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "5745:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1088,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "5749:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5745:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1079,
												"id": 1090,
												"nodeType": "Return",
												"src": "5738:12:5"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "5121:465:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5601:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5613:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5605:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5605:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5624:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5616:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5641:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5627:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1074,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5627:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5604:50:5"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "5678:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5677:9:5"
									},
									"scope": 1141,
									"src": "5592:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "6527:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "6546:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6546:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1108,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "6553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6538:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6538:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "6538:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "6584:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1112,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "6588:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6584:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1114,
												"nodeType": "Return",
												"src": "6577:12:5"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "5766:660:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6441:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6453:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6464:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6481:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6444:50:5"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:9:5"
									},
									"scope": 1141,
									"src": "6432:165:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "7355:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "7374:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7374:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1132,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "7381:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "7366:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "7412:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1136,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "7416:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7412:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1138,
												"nodeType": "Return",
												"src": "7405:12:5"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "6605:649:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "7269:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7281:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "7273:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7273:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7292:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "7284:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7284:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7309:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "7295:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7295:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:50:5"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "7346:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7345:9:5"
									},
									"scope": 1141,
									"src": "7260:165:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1142,
							"src": "638:6790:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:7395:5"
				},
				"id": 5
			}
		}
	}
}